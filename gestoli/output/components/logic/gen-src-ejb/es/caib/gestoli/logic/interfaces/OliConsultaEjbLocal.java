/*
 * Generated by XDoclet - Do not edit!
 */
package es.caib.gestoli.logic.interfaces;

/**
 * Local interface for OliConsultaEjb.
 */
public interface OliConsultaEjbLocal
   extends javax.ejb.EJBLocalObject
{
   /**
    * Només serveix per poder especificar els permisos amb xdoclet. <!-- begin-xdoclet-definition -->
    */
   public void ejbRemove(  ) ;

   /**
    * Només serveix per poder especificar els permisos amb xdoclet. <!-- begin-xdoclet-definition -->
    */
   public void setSessionContext( javax.ejb.SessionContext context ) ;

   /**
    * Cerca la campanya actual <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long campanyaCercaActual(  ) ;

   /**
    * Busca todas las plantaciones y la su detalle de los olivicultores dados de alta en la DO de la campanya actual <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findDescomposicioPlantacioPerOlivicultor( java.lang.Long idOlivicultor ) ;

   /**
    * Busca todas las plantaciones y la su detalle de los olivicultores dados de alta en la DO de la campanya actual <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findDescomposicioPlantacioPerOlivicultorResum( java.lang.Long idOlivicultor ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findOlivicultorsByEstabliment( java.lang.Long idEstabliemnt ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection trasabilitatOlivicultor( java.util.Date dataInici,java.util.Date dataFi,java.lang.Long idOlivicultor,java.lang.Long idEstabliment ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection trasabilitatPartides( java.util.Date finicio,java.util.Date ffin,java.lang.Long estId ) ;

   /**
    * Busca todas las partidas de oliva y la su detalle de los olivicultores dados de alta en la DO de la campanya actual <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findDescomposicioPartidaOlivaPerOlivicultor( java.lang.Long idOlivicultor ) ;

   /**
    * Busca todas las entradas de oliva y el detalle de los olivicultores <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection entradesOlivaConsulta( java.util.Date dataInici,java.util.Date dataFi,java.lang.Long idEstabliment ) ;

   /**
    * Devuelve partidas de oliva por establecimiento y entre 2 fechas <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findPartidasEntreDiasEnEstablecimiento( java.util.Date finicio,java.util.Date ffin,java.lang.Long estId ) ;

   /**
    * Devuelve el codigo de olivicultor original a partir del UID de la tarjeta. Es nulo si no existe. <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long findCodigoOlivicultorFromUidTarjeta( java.lang.String uid,java.lang.Integer camp ) ;

   /**
    * Devuelve analiticas de oliva por deposito <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findAnaliticasParaDeposito( java.lang.Long dipositId ) ;

   /**
    * Devuelve analiticas de oliva por deposito <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findAutocontrolPerLot( java.lang.Long lotId ) ;

   /**
    * Devuelve analiticas de oliva por bota <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findAutocontrolPerBota( java.lang.Long botaId ) ;

   /**
    * Busca todas las elaboraciones <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection oliElaboratConsulta( java.util.Date dataInici,java.util.Date dataFi,java.lang.Long idEstabliment,boolean asc,java.lang.Boolean valid ) ;

   /**
    * Busca todas las elaboraciones <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection olivaElaboradaConsulta( java.util.Date dataInici,java.util.Date dataFi,java.lang.Long idEstabliment,boolean asc,java.lang.Boolean valid ) ;

   /**
    * Busca todas las elaboraciones desglosadas por partidas <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection registreElaboracioOlivaConsulta( java.util.Date dataInici,java.util.Date dataFi,java.lang.Long idEstabliment,boolean asc,java.lang.Boolean valid ) ;

   /**
    * Busca todas las elaboraciones <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection sortidaOrujoConsulta( java.util.Date dataInici,java.util.Date dataFi,java.lang.Long idEstabliment,java.lang.Boolean valid ) ;

   /**
    * Busca todas las entradas de depositos de un establecimiento <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection entradaDipositConsulta( java.lang.Long idEstabliment ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection entradaDiposiOliByDipositAndElaboracio( java.lang.Long dipositId,java.lang.Long idElaboracio,java.lang.Boolean valid ) ;

   /**
    * Devuelve una lista de Diposit por establecimiento y las guarda en un Hash donde la key es la elaboracion <!-- begin-xdoclet-definition -->
    */
   public java.util.HashMap entradaDipositConsultaByEstablimentHash( java.lang.Long idEstabliment ) ;

   /**
    * Devuelve los litros que se queda el olivicultor de un establecimiento y las guarda en un Hash donde la key es la elaboracion <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection oliRetiratPropietarioEntradaDipositConsulta( java.lang.Long idEstabliment ) ;

   /**
    * Devuelve los litros que se queda el olivicultor en una elaboración <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection oliRetiratPropietarioEnElaboracio( java.lang.Long idEstabliment,java.lang.Long idElaboracio ) ;

   /**
    * Busca todas los tralados de depositos en los que este establecimiento es el origen <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection oliSalidaTrasladoConsulta( java.util.Date dataInici,java.util.Date dataFi,java.lang.Long idEstabliment ) ;

   /**
    * Busca todas los tralados de depositos en los que este establecimiento es el origen <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection oliEntradaTrasladoConsulta( java.util.Date dataInici,java.util.Date dataFi,java.lang.Long idEstabliment ) ;

   /**
    * Busca todas los tralados de depositos en los que este establecimiento es el origen <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection movimentsEntreEstablimentsConsulta( java.util.Date dataInici,java.util.Date dataFi,java.lang.Long idEstabliment ) ;

   /**
    * Busca todas los tralados de depositos en los que este establecimiento es el origen <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection movimentsEntreEstablimentsSortidaConsulta( java.util.Date dataInici,java.util.Date dataFi,java.lang.Long idEstabliment ) ;

   /**
    * Busca todas los tralados de depositos en los que este establecimiento es el origen <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection movimentsEntreEstablimentsEntradaConsulta( java.util.Date dataInici,java.util.Date dataFi,java.lang.Long idEstabliment ) ;

   /**
    * Busca todas los tralados de depositos en los que este establecimiento es el origen <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection movimentsEntreEstablimentsSortidaPendentConsulta( java.util.Date dataInici,java.util.Date dataFi,java.lang.Long idEstabliment ) ;

   /**
    * Busca todas las salidas de lotes que se han vendido de este establecimiento <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection getSortidaLotVendaEntreDiasEnEstablecimiento( java.util.Date dataInici,java.util.Date dataFi,java.lang.Long idEstabliment ) ;

   /**
    * Busca todas las salidas de lotes que se han vendido de este establecimiento <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection getSortidaLotVendaOlivaTaulaEntreDiasEnEstablecimiento( java.util.Date dataInici,java.util.Date dataFi,java.lang.Long idEstabliment ) ;

   /**
    * Busca todas las salidas de lotes que se han vendido de este establecimiento <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection getSortidaDipositVendaEntreDiasEnEstablecimiento( java.util.Date dataInici,java.util.Date dataFi,java.lang.Long idEstabliment ) ;

   /**
    * Busca todas las salidas de lotes que se han vendido de este establecimiento <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection getSortidaDipositVendaEnvasadoraEntreDiasEnEstablecimiento( java.util.Date dataInici,java.util.Date dataFi,java.lang.Long idEstabliment ) ;

   /**
    * Busca todas las salidas de lotes que se han vendido de este establecimiento <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection getSortidaDipositVendaNoEnvasadoraEntreDiasEnEstablecimiento( java.util.Date dataInici,java.util.Date dataFi,java.lang.Long idEstabliment ) ;

   /**
    * Busca todas las salidas de lotes que se han vendido de este establecimiento <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection getMovimentsEntreEstablimentsSortidaEntreDiasEnEstablecimiento( java.util.Date dataInici,java.util.Date dataFi,java.lang.Long idEstabliment ) ;

   /**
    * Busca todas las salidas de depósitos que se han realizado de este establecimiento <!-- begin-xdoclet-definition -->
    */
   public java.lang.Double[] getSortidesEntreDiasEnEstablecimiento( java.util.Date dataInici,java.util.Date dataFi,java.lang.Long idEstabliment ) ;

   /**
    * Devuelve el total de aceite existente DO <!-- begin-xdoclet-definition -->
    */
   public java.lang.Double getTotalOliExistenteDO( java.util.Date dataFin,java.lang.Object[] categorias ) ;

   /**
    * Devuelve el total de aceite existente DO <!-- begin-xdoclet-definition -->
    */
   public java.lang.Double getTotalOliExistenteTempAnteriorDO( java.lang.Long temporadaId,java.lang.Object[] categorias ) ;

   /**
    * Devuelve el total de kg de entrada de oliva por fechas <!-- begin-xdoclet-definition -->
    */
   public java.lang.Double getTotalOlivasEntradas( java.util.Date dataInici,java.util.Date dataFin ) ;

   /**
    * Devuelve el total daceite elaborado por fechas <!-- begin-xdoclet-definition -->
    */
   public java.lang.Double getTotalOliElaborat( java.util.Date dataInici,java.util.Date dataFin ) ;

   /**
    * Busca todas las elaboraciones de una determinada categoria por fechas o temporada <!-- begin-xdoclet-definition -->
    */
   public java.lang.Double getTotalOliByCategoriasConsulta( java.util.Date dataInici,java.util.Date dataFin,java.lang.Object[] categorias ) ;

   /**
    * Busca todas las ventas de lotes y aceite a granel de una determinada categoria por fechas o temporada <!-- begin-xdoclet-definition -->
    */
   public java.lang.Double getTotalOliComercialitzatByCategoriasConsulta( java.lang.Long temporadaId,java.util.Date dataInici,java.util.Date dataFin,java.lang.Object[] categorias,java.lang.Long temporadaActual ) ;

   /**
    * Busca todas las ventas de lotes y aceite a granel de una determinada categoria por fechas o temporada <!-- begin-xdoclet-definition -->
    */
   public java.lang.Double getTotalOliComercialitzatByCategoriasConsulta( java.util.Date dataInici,java.util.Date dataFin,java.lang.Object[] categorias ) ;

   /**
    * Busca todas las ventas de lotes por fechas y devuelve dos mapo uno de establecimientos y otro con el total de litros vendidos por establecimiento <!-- begin-xdoclet-definition -->
    */
   public java.util.List getTotalOliComercialitzatByEstablecimiento( java.util.Date dataInici,java.util.Date dataFin ) ;

   /**
    * Busca todos los los traslados de depositos con aceite con categoria autorizada por fechas o temporada <!-- begin-xdoclet-definition -->
    */
   public java.lang.Double getTotalOliDOdeEnvasadoresConsulta( java.lang.Long temporadaId,java.util.Date dataInici,java.util.Date dataFin,java.lang.Integer idAutorizada ) ;

   /**
    * Busca todas las ventas de lotes de una determinada categoria por fechas o temporada <!-- begin-xdoclet-definition -->
    */
   public java.lang.Double getTotalOliDOaEnvasadoresConsulta( java.util.Date dataInici,java.util.Date dataFin,java.lang.Integer idAutorizada ) ;

   /**
    * Construeix l'arbre per trazar el procés del vi.
    * @param contenidorId el contenidor per trazar l'arbre
    * @return una colecció amb la informacó per construir l'arbre. <!-- begin-xdoclet-definition -->
    * @generated     */
   public java.util.Collection trazabilitat( java.lang.String tipus,java.lang.String id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public java.util.Collection trazabilitatOliDisponibleDiposit( java.lang.String id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public java.util.Collection trazabilitatOliDisponibleLote( java.lang.String id ) ;

   /**
    * DevuelveEntradaLot by traza <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.EntradaLot getEntradaLotByTraza( java.lang.Long idTraza ) ;

   /**
    * Devuelve SortidaDiposit by traza <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.SortidaDiposit getSortidaDipositByTraza( java.lang.Long idTraza ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public java.util.Collection trazabilitatPartidaOli( java.lang.String id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public java.util.Collection trazabilitatPartidaOliSinDeposito( java.lang.String idPartida ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public java.util.List lotesElaboracio( java.lang.String id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public java.util.List analiticasLote( java.lang.String lotId ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public java.util.Collection trazabilitatVolante( java.lang.String id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public java.util.Collection trazabilitatOliComercializat( java.lang.String id ) ;

   /**
    * Construeix l'arbre per a la traçabilitat resumida de l'oli.
    * @param contenidorId el contenidor per trazar l'arbre
    * @return una colecció amb la informacó per construir l'arbre. <!-- begin-xdoclet-definition -->
    * @generated     */
   public es.caib.gestoli.logic.util.TrazabilitatResumida trazabilitatResumida( java.lang.String tipus,java.lang.String id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public es.caib.gestoli.logic.util.TrazabilitatResumida trazabilitatResumidaOliDisponibleDiposit( java.lang.String id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public es.caib.gestoli.logic.util.TrazabilitatResumida trazabilitatResumidaOlivaDisponibleBota( java.lang.String id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public es.caib.gestoli.logic.util.TrazabilitatResumida trazabilitatResumidaOliDisponibleLote( java.lang.String id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public es.caib.gestoli.logic.util.TrazabilitatResumida trazabilitatResumidaOlivaDisponibleEnvas( java.lang.String id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public es.caib.gestoli.logic.model.SortidaBota findSortidaBotaByLot( es.caib.gestoli.logic.model.Lot lot ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public es.caib.gestoli.logic.util.TrazabilitatResumida trazabilitatResumidaPartidaOliSinDeposito( java.lang.String idPartida ) ;

   /**
    * Cerca tots las diposits de un establecimiento no vacios y que pertenecen a unas determinadas categorias <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findDipositsActiusNoVaciosByEstablecimientoAndCategorias( java.lang.Long establimentId,java.lang.Object[] categorias ) ;

   /**
    * Cerca tots las diposits de un establecimiento no vacios y que pertenecen a unas determinadas categorias <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findDipositsActiusNoVaciosByEstablecimientoCategoriasAndData( java.lang.Long establimentId,java.lang.Object[] categorias,java.util.Date data ) ;

   /**
    * Cerca tots las diposits de un establecimiento no vacios y que pertenecen a unas determinadas categorias <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findDipositsActiusNoVaciosByEstablecimientoCategoriasAndData( java.lang.Long establimentId,java.lang.Object[] categorias,java.util.Date data,java.lang.Boolean dipositsEnvasadora ) ;

   /**
    * Cerca tots las diposits de un establecimiento no vacios y que pertenecen a unas determinadas categorias <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findBotasActivasByEstablecimientoAndData( java.lang.Long establimentId,java.util.Date data ) ;

   /**
    * Cerca tots las diposits de un establecimiento no vacios y que pertenecen a unas determinadas categorias <!-- begin-xdoclet-definition -->
    */
   public java.lang.Double findExistenciesDipositByData( java.lang.Long idDiposit,java.util.Date data ) ;

   /**
    * Devuelve todos las botellas de un lote de un establecimiento no vendidos en una fecha y que pertenecen a un determinado etiquetage <!-- begin-xdoclet-definition -->
    */
   public java.lang.Integer findBotellesByEstablimentEtiquetatgeAndData( java.lang.Long establimentId,java.lang.Long etiquetatgeId,java.util.Date data ) ;

   /**
    * Devuelve todos los lotes de un establecimiento no vendidos y que pertenecen a unas determinadas categorias <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findLotsNoVendidosByEstablecimientoAndCategorias( java.lang.Long establimentId,java.lang.Object[] categorias ) ;

   /**
    * Cerca tots els lots d'un establiment no buits i que pertanyen a unes determinades categories <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findLotsNoVendidosByEstablecimientoCategoriasAndData( java.lang.Long establimentId,java.lang.Object[] categorias,java.util.Date data ) ;

   /**
    * Cerca tots els lots d'un establiment no buits i que pertanyen a unes determinades categories <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findLotsOlivaTaulaDisponiblesByEstablecimientoAndData( java.lang.Long establimentId,java.util.Date data ) ;

   /**
    * Cerca tots els lots d'un establiment no buits i que pertanyen a unes determinades categories <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findLotsOlivaTaulaAmbExistenciaByEstablecimientoAndData( java.lang.Long establimentId,java.util.Date data ) ;

   /**
    * Devuelve todos los lotes de un establecimiento no vendidos <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findLotsNoVendidosByEstablecimiento( java.lang.Long establimentId ) ;

   /**
    * Devuelve todos los lotes de un establecimiento no vendidos <!-- begin-xdoclet-definition -->
    */
   public java.util.List findBotellesLotsNousByEstablimentAndDataGroupedByEtiquetatge( java.lang.Long establimentId,java.util.Date data ) ;

   /**
    * Devuelve todos las salidas de un lote de un establecimiento no vendidos en una fecha y que pertenecen a un determinado etiquetage <!-- begin-xdoclet-definition -->
    */
   public java.util.List findSoridesLotByEstablimentAndDataGroupedByEtiquetatge( java.lang.Long establimentId,java.util.Date data ) ;

   /**
    * Devuelve todos los lotes de un establecimiento no vendidos <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findExistenciesLotsByEstabliment( java.lang.Long establimentId ) ;

   /**
    * Cerca tots las diposits de un establecimiento no vacios y que pertenecen a unas determinadas categorias <!-- begin-xdoclet-definition -->
    */
   public java.lang.Double findExistenciesLotByData( java.lang.Long idLot,java.util.Date data ) ;

   /**
    * Devuelve todos los lotes de un establecimiento no vendidos <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findLotsByEstablimentEntreDates( java.lang.Long idEstabliment,java.util.Date dataInici,java.util.Date dataFi ) ;

   /**
    * Devuelve todos los lotes de un establecimiento no vendidos <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findLotsOlivaTaulaByEstablimentEntreDates( java.lang.Long idEstabliment,java.util.Date dataInici,java.util.Date dataFi ) ;

   /**
    * Devuelve todos los lotes de un establecimiento no vendidos <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findLotsSortidesByEstablimentIDataInici( java.lang.Long establimentId,java.util.Date data ) ;

   /**
    * Devuelve todos los lotes de un establecimiento no vendidos <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findLotsSortidesByEstablimentEntreDates( java.lang.Long establimentId,java.util.Date dataInici,java.util.Date dataFi ) ;

   /**
    * Busca las entradas de depositos entre 2 fechas para un establecimiento <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection getEntradasDipositEntreFechasAndEstablecimiento( java.util.Date finicio,java.util.Date ffin,java.lang.Long idEst ) ;

   /**
    * Busca las salidas de depositos entre 2 fechas para un establecimiento <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection getSortidesDipositEntreFechasAndEstablecimiento( java.util.Date finicio,java.util.Date ffin,java.lang.Long idEst ) ;

   /**
    * Busca las salidas de depositos entre 2 fechas para un establecimiento <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection getEntradesDipositEnvasadoraEntreFechasAndEstablecimiento( java.util.Date finicio,java.util.Date ffin,java.lang.Long idEst ) ;

   /**
    * Busca las salidas de depositos entre 2 fechas para un establecimiento <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection getSortidesDipositEntreFechasAndEstablecimiento( java.util.Date finicio,java.util.Date ffin,java.lang.Long idEst,java.lang.Boolean valid ) ;

   /**
    * Busca las salidas de lotes entre 2 fechas para un establecimiento <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection getSortidesLotsEntreDadesAndEstabliment( java.util.Date finicio,java.util.Date ffin,java.lang.Long idEst,java.lang.Boolean valid ) ;

   /**
    * Busca las salidas de lotes entre 2 fechas para un establecimiento <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection getSortidesLotsOlivaTaulaEntreDadesAndEstabliment( java.util.Date finicio,java.util.Date ffin,java.lang.Long idEst,java.lang.Boolean valid ) ;

   /**
    * Busca las salidas de lotes entre 2 fechas para un establecimiento <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection getEntradesLotsEntreDadesAndEstabliment( java.util.Date finicio,java.util.Date ffin,java.lang.Long idEst,java.lang.Boolean valid ) ;

   /**
    * Busca las salidas de lotes entre 2 fechas para un establecimiento <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection getEntradesLotsDevolucioEntreDadesAndEstabliment( java.util.Date finicio,java.util.Date ffin,java.lang.Long idEst,java.lang.Boolean valid ) ;

   /**
    * Busca las entradas de lotes entre 2 fechas para un establecimiento <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection getEntradesLotesEntreFechasAndEstablecimiento( java.util.Date finicio,java.util.Date ffin,java.lang.Long idEst,java.lang.String entrada ) ;

   /**
    * Busca las salidas de lotes entre 2 fechas para un establecimiento <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection getSortidesLotesEntreFechasAndEstablecimiento( java.util.Date finicio,java.util.Date ffin,java.lang.Long idEst ) ;

   /**
    * Devuelve la cantidad total de litros de aceite existente para un establecimiento y categoria <!-- begin-xdoclet-definition -->
    */
   public java.lang.Double getQuantitatOliExistenciesDiscriminantQualificacioAndEstabliment( java.lang.Long establimentId,java.util.Date dataInici,java.lang.Object[] categorias ) ;

   /**
    * Devuelve la cantidad total de litros de aceite existente para un establecimiento y categoria <!-- begin-xdoclet-definition -->
    */
   public java.lang.Double[] getQuantitatOliExistenciesQualificacioAndEstabliment( java.lang.Long establimentId,java.util.Date data ) ;

   /**
    * Devuelve la cantidad total de litros de aceite vendido para un establecimiento y categoria <!-- begin-xdoclet-definition -->
    */
   public java.lang.Double getQuantitatOliVenutDiscriminantQualificacioAndEstabliment( java.lang.Long establimentId,java.util.Date dataInici,java.lang.Object[] categorias ) ;

   /**
    * Devuelve la cantidad total de litros de aceite vendido para un establecimiento y categoria <!-- begin-xdoclet-definition -->
    */
   public java.lang.Double getQuantitatOliVenutDiscriminantQualificacioAndEstabliment( java.lang.Long establimentId,java.util.Date dataInici,java.util.Date dataFi,java.lang.Object[] categorias ) ;

   /**
    * Devuelve la cantidad total de litros de aceite elaborado para un establecimiento y categoria <!-- begin-xdoclet-definition -->
    */
   public java.lang.Double getQuantitatOliElaboratDiscriminantQualificacioAndEstabliment( java.lang.Long establimentId,java.util.Date dataInici,java.lang.Object[] categorias ) ;

   /**
    * Devuelve la cantidad total de litros de aceite elaborado para un establecimiento y categoria <!-- begin-xdoclet-definition -->
    */
   public java.lang.Double getQuantitatOliElaboratDiscriminantQualificacioAndEstabliment( java.lang.Long establimentId,java.util.Date dataInici,java.util.Date dataFi,java.lang.Object[] categorias ) ;

   /**
    * Devuelve la cantidad total de litros de aceite elaborado para un establecimiento y categoria <!-- begin-xdoclet-definition -->
    */
   public java.lang.Double getTotalOlivaMolturada( java.util.Date dataInici,java.lang.Boolean ambDo,java.lang.Long establimentId ) ;

   /**
    * Devuelve la cantidad total de litros de aceite elaborado para un establecimiento y categoria <!-- begin-xdoclet-definition -->
    */
   public java.lang.Double getTotalOlivaMolturada( java.util.Date dataInici,java.util.Date dataFi,java.lang.Boolean ambDo,java.lang.Long establimentId ) ;

   /**
    * Busca las salidas de lotes entre 2 fechas para un establecimiento <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection getEntradasDipositEntreFechasDipositAndEstablecimiento( java.util.Date finicio,java.util.Date ffin,java.lang.Long idEst,java.lang.Long idDip,java.lang.Boolean valid ) ;

   /**
    * Busca las entradas de depósitp entre 2 fechas para un establecimiento <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection getEntradasDipositEntreFechasAndDiposit( java.util.Date finicio,java.util.Date ffin,java.lang.Long idDip,java.lang.Boolean valid ) ;

   /**
    * Busca las salidas de depósitos entre 2 fechas para un establecimiento <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection getSortidesDipositEntreFechasDipositAndEstablecimiento( java.util.Date finicio,java.util.Date ffin,java.lang.Long idEst,java.lang.Long idDip,java.lang.Boolean valid ) ;

   /**
    * Busca las salidas de lotes entre 2 fechas para un establecimiento <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection getSortidesDipositEntreFechasAndDiposit( java.util.Date finicio,java.util.Date ffin,java.lang.Long idDip,java.lang.Boolean valid ) ;

   /**
    * Busca las salidas de lotes entre 2 fechas para un establecimiento <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findSortidesOrujoEntreDatesIEstabliment( java.util.Date dataInici,java.util.Date dataFi,java.lang.Long establimentId,java.lang.Boolean valid ) ;

   /**
    * Devuelve la cantidad total de aceite que cambia de categoria <!-- begin-xdoclet-definition -->
    */
   public java.lang.Double getQuantitatOliCanviatDO( java.lang.Long temporadaId,java.lang.Long establimentId,java.util.Date dataInici,java.util.Date dataFi,java.lang.Object[] categoria,java.lang.Boolean aOliDesqualificat ) ;

   /**
    * Devuelve la cantidad total de aceite que cambia de DO a NO_DO <!-- begin-xdoclet-definition -->
    */
   public java.lang.Double getQuantitatOliCanviatCategoriaDO_NoDO( java.lang.Long establimentId,java.util.Date dataInici,java.util.Date dataFi ) ;

   /**
    * Devuelve la superficie de oliveras de una categoria inscritas en la DO <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection getSuperficiesVarietatsDO( java.lang.Long idTemporada ) ;

   /**
    * Devuelve la superficie de oliveras de una categoria inscritas en la DO <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection getNumeroArbresVarietatsDO( java.lang.Long idTemporada ) ;

   /**
    * Devuelve las superficies de cada variedad de oliva, por cada tipo, y su municipio <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection getSuperficiesVarietats( java.lang.Long idTemporada ) ;

   /**
    * Devuelve la superficie de oliveras de una categoria inscritas en la DO <!-- begin-xdoclet-definition -->
    */
   public java.lang.Double getSuperfFincasDO( java.lang.Long idTemporada,java.lang.Double valorInicial,java.lang.Double valorFinal ) ;

   /**
    * Devuelve la produccion por meses para un establecimiento <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection getTotalOliElaboratTafonaPerMes( java.lang.Long temporadaId,java.lang.Long establimentId ) ;

   /**
    * Devuelve un listado de los productores de aceite <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection usuariosConTafonasByCampanya( java.lang.Long idTemporada ) ;

   /**
    * Devuelve un listado de los establecimientos de aceite <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection establecimientosConTafonasByCampanya( java.lang.Long idTemporada ) ;

   /**
    * Devuelve un listado de elaboraciones por productor <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection getElaboracionesByUsuario( java.lang.Long idTemporada,java.lang.Long usuId ) ;

   /**
    * Devuelve un listado de elaboraciones por establecimiento <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection getElaboracionesByEstablecimiento( java.lang.Long idTemporada,java.lang.Long establimentId ) ;

   /**
    * Devuelve un listado de elaboraciones por establecimiento <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection getElaboracionesByEstablecimiento( java.lang.Long establimentId ) ;

   /**
    * Devuelve un listado de elaboraciones por establecimiento <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findAnaliticasByEstabliment( java.lang.Long establimentId ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @throws RemoteException
    * @generated     */
   public java.util.Collection findEntradesDipositTrasllatByEstablimentAndDates( java.util.Date dataInici,java.util.Date dataFi,java.lang.Long establimentId ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public java.util.Collection findEntradesDipositDeEnvasadoraByEstablimentAndDates( java.util.Date dataInici,java.util.Date dataFi,java.lang.Long establimentId ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public es.caib.gestoli.logic.model.EntradaDiposit findEntradaDipositByTraza( java.lang.Long idTraza ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public java.util.Collection trazabilitatMarca( java.lang.Long idMarca ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public java.util.Collection trazabilitatLotBotelles( java.lang.String lBot ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public java.util.Collection trazabilitatLot( java.lang.Long idLot ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public java.util.Collection trazabilitatEtiquetesLot( es.caib.gestoli.logic.model.EtiquetesLot et ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public java.util.Collection trazabilitatLotTalc( java.lang.String lTalc,java.lang.Long idEstabliment ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public java.util.Collection trazabilitatPartidaOliva( java.lang.Long idPartida ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public java.util.Collection trazabilitatDiposit( java.lang.Long idDiposit,java.util.Date data ) ;

   /**
    * Construeix l'arbre per trazar el procés del vi.
    * @param contenidorId el contenidor per trazar l'arbre
    * @return una colecció amb la informacó per construir l'arbre. <!-- begin-xdoclet-definition -->
    * @generated     */
   public java.util.Collection trazabilitatInvertida( es.caib.gestoli.logic.model.Traza trazaPare ) ;

   /**
    * Construeix l'arbre per trazar el procés del vi.
    * @param contenidorId el contenidor per trazar l'arbre
    * @return una colecció amb la informacó per construir l'arbre. <!-- begin-xdoclet-definition -->
    * @generated     */
   public void trazabilitatInvertida( es.caib.gestoli.logic.model.Traza trazaPare,java.util.Collection result ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public java.lang.String getContraetiquetesBySortidaDiposit( es.caib.gestoli.logic.model.SortidaDiposit sd ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public java.util.Collection getSuperficiesVarietatsByCampanya( java.lang.Long[] olivicultors,java.lang.Long campanyaId,java.lang.Boolean taula,java.lang.Boolean experimental ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public java.util.Collection findLotsByEstablimentEntreDates( java.lang.Long idEstabliment,java.util.Date dataInici,java.util.Date dataFi,java.lang.Boolean valid ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public java.util.Collection getDevolucionsEntreDatesAndEstabliment( java.util.Date di,java.util.Date df,java.lang.Long idEst ) ;

   /**
    * Busca todas las entradas de hinojo <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection entradesFonoll( java.util.Date dataInici,java.util.Date dataFi,java.lang.Long idEstabliment ) ;

   /**
    * set the hibernate template.
    * @param hibernateTemplate the hibernate spring template. <!-- begin-xdoclet-definition -->
    */
   public void setHibernateTemplate( org.springframework.orm.hibernate3.HibernateTemplate hibernateTemplate ) ;

   /**
    * get the hibernate template.
    * @return the hibernate spring template. <!-- begin-xdoclet-definition -->
    */
   public org.springframework.orm.hibernate3.HibernateTemplate getHibernateTemplate(  ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public java.util.Collection findSortidesOlivaCruaGranelByEstablimentEntreDates( java.lang.Long idEstabliment,java.util.Date dataInici,java.util.Date dataFi,java.lang.Boolean valid ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public java.util.Collection findSortidesOlivaBotaGranelByEstablimentEntreDates( java.lang.Long idEstabliment,java.util.Date dataInici,java.util.Date dataFi,java.lang.Boolean valid ) ;

   /**
    * Busca todas las salidas de lotes que se han vendido de este establecimiento <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection getSortidaLotVendaFiltre( java.util.Date dataInici,java.util.Date dataFi,java.lang.Long idEstabliment,java.lang.String document,java.lang.String motiuVenda ) ;

   /**
    * Busca todas las salidas de lotes que se han vendido de este establecimiento <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection getSortidaLotById( java.lang.Long sortidaLotId ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection getConsultaBasicaGeneral( es.caib.gestoli.logic.model.ConsultaBasicaGeneral command,java.lang.Long establimentId ) ;

}
