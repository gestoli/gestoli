/*
 * Generated by XDoclet - Do not edit!
 */
package es.caib.gestoli.logic.interfaces;

/**
 * Local interface for OliInfraestructuraEjb.
 */
public interface OliInfraestructuraEjbLocal
   extends javax.ejb.EJBLocalObject
{
   /**
    * Només serveix per poder especificar els permisos amb xdoclet. <!-- begin-xdoclet-definition -->
    */
   public void ejbRemove(  ) ;

   /**
    * Cerca tots els grups definits a GestOli <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection grupCercaTots(  ) ;

   /**
    * Cerca tots els usuaris definits a GestOli <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection usuariCercaTots(  ) ;

   /**
    * Cerca tots els usuaris no olivicultors <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection usuariCercaTotsNoOlivicultors(  ) ;

   /**
    * Cerca tots els usuaris pertanyents a un establiment
    * @param idEstabliment Identificador de l'establiment
    * @return Collection dels usuaris de l'establiment <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection usuariCercaUsuarisEstabliment( java.lang.Long idEstabliment ) ;

   /**
    * Cerca tots els usuaris actius <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection usuariCercaTotsActivos(  ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long usuariCrear( es.caib.gestoli.logic.model.Usuari usuari ) ;

   /**
    * Crea un usuari <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long usuariCrear( java.lang.Boolean actiu,java.lang.String[] grupsArray,java.lang.String idiomaId,java.lang.String usuario,java.lang.String password,java.lang.String email,java.lang.String observaciones ) ;

   /**
    * Crea un usuari, i l'assigna a l'establiment corresponent
    * @param actiu
    * @param grupsArray
    * @param idiomaId
    * @param usuario
    * @param password
    * @param email
    * @param observaciones
    * @param establimentId
    * @return identificador del nou usuari <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long usuariCrear( java.lang.Boolean actiu,java.lang.String[] grupsArray,java.lang.String idiomaId,java.lang.String usuario,java.lang.String password,java.lang.String email,java.lang.String observaciones,java.lang.Long establimentId ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void usuariModificar( es.caib.gestoli.logic.model.Usuari usuari ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void usuariModificar( java.lang.Boolean actiu,java.lang.String[] grupsArray,java.lang.String idiomaId,java.lang.String usuario,java.lang.String password,java.lang.String email,java.lang.String observaciones,java.lang.Long usuarioId ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Usuari usuariAmbId( java.lang.Long id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void trasllatModificar( es.caib.gestoli.logic.model.Trasllat trasllat ) ;

   /**
    * Cerca tots els idiomes <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection idiomaCercaTots(  ) ;

   /**
    * Cerca totes les taxes <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection taxaCercaTots(  ) ;

   /**
    * Cerca la taxa <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Taxa getTaxaActual(  ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void taxaModificar( es.caib.gestoli.logic.model.Taxa taxa ) ;

   /**
    * Cerca tots els colors <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection colorCercaTots(  ) ;

   /**
    * Cerca tots els materials de tipus d'envas <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection materialTipusEnvasCercaTots(  ) ;

   /**
    * Cerca tots els tipus d'envasos <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection tipusEnvasCercaTots(  ) ;

   /**
    * Cerca tots els tipus d'envasos <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection tipusEnvasCercaTotsActius(  ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.TipusEnvas tipusEnvasAmbId( java.lang.Long id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long tipusEnvasCrear( es.caib.gestoli.logic.model.TipusEnvas tipusEnvas ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long tipusEnvasCrear( java.lang.Integer materialTipusEnvasId,java.lang.Integer colorId,java.lang.Boolean actiu,java.lang.Double volum,java.lang.String observacions ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long tipusEnvasCrear( java.lang.Integer materialTipusEnvasId,java.lang.Integer colorId,java.lang.Double volum,java.lang.String observacions ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void TipusEnvasModificar( es.caib.gestoli.logic.model.TipusEnvas tipusEnvas ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void tipusEnvasModificar( java.lang.Integer materialTipusEnvasId,java.lang.Integer colorId,java.lang.Boolean actiu,java.lang.Double volum,java.lang.String observaciones,java.lang.Long tipusEnvasId ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void tipusEnvasModificar( java.lang.Integer materialTipusEnvasId,java.lang.Integer colorId,java.lang.Boolean actiu,java.lang.Double volum,java.lang.Long tipusEnvaseId ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public void tipusEnvasEsborrar( java.lang.Long id ) ;

   /**
    * Cerca tots els tipus d'establiments <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection tipusEstablimentCercaTots(  ) ;

   /**
    * Comprueba si existe un usuario ya en BBDD <!-- begin-xdoclet-definition -->
    */
   public boolean existeNombre( java.lang.String nombre,java.lang.Long userId ) ;

   /**
    * Comprueba si existen olivicultores altaDO en la BBDD <!-- begin-xdoclet-definition -->
    */
   public boolean existenOlivicultoresAltaDOConFincas(  ) ;

   /**
    * Comprueba si existen fincas asociadas a olivicultores en la BBDD, para validar el borrado. <!-- begin-xdoclet-definition -->
    */
   public boolean existenFincasAsociadasOlivicultores( java.lang.Long idOlivicultor ) ;

   /**
    * Comprueba si existen plantaciones asociadas a fincas en la BBDD, para validar el borrado. <!-- begin-xdoclet-definition -->
    */
   public boolean existenPlantacionesAsociadasFincas( java.lang.Long idFinca ) ;

   /**
    * Devuelve el olivicultor de una finca validar el borrado. <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long findOlivicultorDeFinca( java.lang.Long idFinca ) ;

   /**
    * Comprueba si existen olivicultores asociados a usuarios en la BBDD, para validar el borrado. <!-- begin-xdoclet-definition -->
    */
   public boolean existenOlivicultoresAsociadosUsuarios( java.lang.Long idUsu ) ;

   /**
    * Comprueba si existen establecimientos asociados a usuarios en la BBDD, para validar el borrado. <!-- begin-xdoclet-definition -->
    */
   public boolean existenEstablecimientosAsociadosUsuarios( java.lang.Long idUsu ) ;

   /**
    * Comprueba si existen establecimientos asociados a usuarios en la BBDD, para validar el borrado. <!-- begin-xdoclet-definition -->
    */
   public boolean existenZonasAsociadasEstablecimientos( java.lang.Long idEstabliment ) ;

   /**
    * Comprueba si existen depósitos asociados a zonas en la BBDD, para validar el borrado. <!-- begin-xdoclet-definition -->
    */
   public boolean existenDepositosAsociadosZonas( java.lang.Long idZona ) ;

   /**
    * Comprueba si existen partidas de oliva asociadas a zonas en la BBDD, para validar el borrado. <!-- begin-xdoclet-definition -->
    */
   public boolean existenPartidasAsociadasZonas( java.lang.Long idZona ) ;

   /**
    * Totes les partides d'oli <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findPartidesOlivaByEstablimentEntreDates( java.lang.Long idEstabliment,java.util.Date dataInici,java.util.Date dataFi,java.lang.Boolean valid ) ;

   /**
    * Totes les partides d'oli <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findPartidesOlivaTaulaByEstablimentEntreDates( java.lang.Long idEstabliment,java.util.Date dataInici,java.util.Date dataFi,java.lang.Boolean valid ) ;

   /**
    * Totes les partides d'oli <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findPartidesOlivaByEstabliment( java.lang.Long idEstabliment,java.lang.Boolean valid ) ;

   /**
    * Comprueba si existen lotes asociados a zonas en la BBDD, para validar el borrado. <!-- begin-xdoclet-definition -->
    */
   public boolean existenLotesAsociadosZonas( java.lang.Long idZona ) ;

   /**
    * Comprueba si existen entradas de lote asociadas a zonas en la BBDD, para validar el borrado. <!-- begin-xdoclet-definition -->
    */
   public boolean existenEntradasLoteAsociadasZonas( java.lang.Long idZona ) ;

   /**
    * Comprueba si existen salidas de lote asociadas a zonas en la BBDD, para validar el borrado. <!-- begin-xdoclet-definition -->
    */
   public boolean existenSalidasLoteAsociadasZonas( java.lang.Long idZona ) ;

   /**
    * Comprueba si existen entradas de lote asociadas al lote en la BBDD, para validar el borrado. <!-- begin-xdoclet-definition -->
    */
   public boolean existeixenEntradesLotAssociadesLot( java.lang.Long idLot ) ;

   /**
    * Comprueba si existen salidas de lote asociadas a zonas en la BBDD, para validar el borrado. <!-- begin-xdoclet-definition -->
    */
   public boolean existeixenSortidesLotAssociadesLot( java.lang.Long idLot ) ;

   /**
    * Comprueba si existen salidas de lote asociadas a zonas en la BBDD, para validar el borrado. <!-- begin-xdoclet-definition -->
    */
   public boolean existenEntradasDepositoAsociadasDeposito( java.lang.Long idDiposit ) ;

   /**
    * Comprueba si existen salidas de lote asociadas a zonas en la BBDD, para validar el borrado. <!-- begin-xdoclet-definition -->
    */
   public boolean existenAnaliticasAsociadasDeposito( java.lang.Long idDiposit ) ;

   /**
    * Comprueba si existen salidas de lote asociadas a zonas en la BBDD, para validar el borrado. <!-- begin-xdoclet-definition -->
    */
   public boolean existenSalidasDepositoAsociadasDeposito( java.lang.Long idDiposit ) ;

   /**
    * Comprueba si existen salidas de lote asociadas a zonas en la BBDD, para validar el borrado. <!-- begin-xdoclet-definition -->
    */
   public boolean existenTrasladosAsociadosDeposito( java.lang.Long idDiposit ) ;

   /**
    * Comprueba si existen salidas de lote asociadas a zonas en la BBDD, para validar el borrado. <!-- begin-xdoclet-definition -->
    */
   public boolean existenLotesAsociadosDeposito( java.lang.Long idDiposit ) ;

   /**
    * Comprueba si existen etiquetajes asociados a tipos de envase en la BBDD, para validar el borrado. <!-- begin-xdoclet-definition -->
    */
   public boolean existenEtiquetajesAsociadosTiposEnvase( java.lang.Long idTipEnv ) ;

   /**
    * Comprueba si existe un establecimiento ya en BBDD <!-- begin-xdoclet-definition -->
    */
   public boolean existeEstablecimiento( java.lang.String nombre,java.lang.Long estId ) ;

   /**
    * Comprueba si existe un cif ya en BBDD <!-- begin-xdoclet-definition -->
    */
   public boolean existeCif( java.lang.String nombre,java.lang.Long estId ) ;

   /**
    * Comprueba si existe un cif y nombre ya en BBDD <!-- begin-xdoclet-definition -->
    */
   public boolean establimentExisteCifName( java.lang.Long campanyaId,java.lang.String cif,java.lang.String name,java.lang.Long estId ) ;

   /**
    * Comprueba si existe un nif y nombre ya en BBDD <!-- begin-xdoclet-definition -->
    */
   public boolean existeNifName( java.lang.Long campanyaId,java.lang.String nif,java.lang.String name,java.lang.Long estId ) ;

   /**
    * Comprueba si existe un nif y nombre ya en BBDD <!-- begin-xdoclet-definition -->
    */
   public boolean existeNombreFinca( java.lang.String nombreFinca,java.lang.String idOlivicultor,java.lang.Long fincaId ) ;

   /**
    * Comprueba si existe un CodiDO ya en BBDD <!-- begin-xdoclet-definition -->
    */
   public boolean existeCodiDO( java.lang.Long campanyaId,java.lang.String codiDO,java.lang.Long estId ) ;

   /**
    * Comprueba si existe un CodiDOExperimental ya en BBDD <!-- begin-xdoclet-definition -->
    */
   public boolean existeCodiDOExperimental( java.lang.Long campanyaId,java.lang.String codiDOExperimental,java.lang.Long estId ) ;

   /**
    * Comprueba si existe un CodiRB ya en BBDD <!-- begin-xdoclet-definition -->
    */
   public boolean existeCodiRB( java.lang.Long campanyaId,java.lang.String codiRB,java.lang.Long estId ) ;

   /**
    * Comprueba si existe un CodiRC ya en BBDD <!-- begin-xdoclet-definition -->
    */
   public boolean existeCodiRC( java.lang.Long campanyaId,java.lang.String codiRC,java.lang.Long estId ) ;

   /**
    * Comprueba si el usuario ya esta asignado a algun olivicultor <!-- begin-xdoclet-definition -->
    */
   public boolean usuarioAsignadoOlivicultor( java.lang.Long campanyaId,java.lang.Long usuarioId,java.lang.Long estId ) ;

   /**
    * Comprueba si el usuario ya esta asignado a algun establecimiento <!-- begin-xdoclet-definition -->
    */
   public boolean usuarioAsignadoEstablecimiento( java.lang.Long campanyaId,java.lang.Long usuarioId,java.lang.Long estId ) ;

   /**
    * Comprueba si existe un tipo de envase igual ya en BBDD <!-- begin-xdoclet-definition -->
    */
   public boolean existeTipusEnvas( java.lang.Integer materialTipusEnvas,java.lang.Integer color,java.lang.Double volum,java.lang.Long tipusEnvasId ) ;

   /**
    * Comprueba si se modifica de activo a no activo, no debe tener ningún etiquetaje asociado <!-- begin-xdoclet-definition -->
    */
   public boolean existenEtiquetatgesActiusEnTipusEnvas( java.lang.Long tipusEnvasId ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void usuariEsborrar( java.lang.Long id ) ;

   /**
    * Cerca tots les marques <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection marcaCercaTots(  ) ;

   /**
    * Cerca tots els marques activas <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection marcaCercaTotsActivos(  ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void marcaEsborrar( java.lang.Long id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void marcaCrear( es.caib.gestoli.logic.model.Marca marca ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long marcaCrear( java.lang.String nombre,java.lang.Boolean actiu,java.lang.Boolean denominacioOrigen,java.lang.Boolean olivaTaula,java.util.List etiquetatgesList,java.lang.String observacions ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void marcaModificar( es.caib.gestoli.logic.model.Marca marca ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection getEstablecimientosByMarca( java.lang.Long marcaId ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void marcaModificar( java.lang.Long marcaId,java.lang.String nombre,java.lang.Boolean actiu,java.lang.Boolean denominacioOrigen,java.lang.Boolean olivaTaula,java.util.List etiquetatgesList,java.util.Collection establiments,java.lang.String observacions ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Marca marcaAmbId( java.lang.Long id ) ;

   /**
    * Comprueba si existe una marca con ese nombre ya en BBDD <!-- begin-xdoclet-definition -->
    */
   public boolean existeMarca( java.lang.String nombre,java.lang.Long id ) ;

   /**
    * Cerca tots les etiquetatges <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection etiquetatgeCercaTots(  ) ;

   /**
    * Cerca tots les etiquetatges <!-- begin-xdoclet-definition -->
    */
   public java.util.List etiquetatgeByMarca( java.lang.Long idMarca ) ;

   /**
    * Cerca tots les etiquetatges <!-- begin-xdoclet-definition -->
    */
   public java.util.List etiquetatgeByEstabliment( java.lang.Long establimentId ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public void etiquetatgeEsborrar( java.lang.Long id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Etiquetatge etiquetatgeAmbId( java.lang.Long id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void etiquetatgeCrear( es.caib.gestoli.logic.model.Etiquetatge etiquetatge ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void etiquetatgeCrear( java.lang.Long tipusEnvasId,java.lang.Long marcaId,java.lang.Boolean actiu,java.lang.Long imatgeFrontal,java.lang.Long imatgePosterior,java.lang.String observacions ) ;

   /**
    * Cerca tots les establiments <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection establimentCercaTots(  ) ;

   /**
    * Cerca tots les establiments <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection establimentCercaTotsEliminats(  ) ;

   /**
    * Cerca tots els establecimientos per campanya <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection establimentCercaTotsByCampanya( java.lang.Long campanyaId ) ;

   /**
    * Cerca tots els establecimientos tafona activos per campanya <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long numTafonasByCampanya( java.lang.Long campanyaId ) ;

   /**
    * Cerca tots els establecimientos tafona activos productors d'oliva de taula per campanya <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long numTafonasRTByCampanya( java.lang.Long campanyaId ) ;

   /**
    * Cerca tots els establecimientos envasadora activos per campanya <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long numEnvasadoraByCampanya( java.lang.Long campanyaId ) ;

   /**
    * Cerca tots els establecimientos envasadora activos per campanya <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long numEnvasadoraRTByCampanya( java.lang.Long campanyaId ) ;

   /**
    * Cerca tots els establecimientos per campanya ordenat per RB i RC <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection establimentCercaTotsByCampanyaOrderedByRbRc( java.lang.Long campanyaId ) ;

   /**
    * Cerca tots els establiments activos <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection establimentCercaTotsActivos( java.lang.Long campanyaId ) ;

   /**
    * Cerca tots els establiments activos <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection establimentProductorOlivaCercaTotsActivos( java.lang.Long campanyaId ) ;

   /**
    * Cerca tots els establiments activos <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection establimentCercaTotsEliminats( java.lang.Long campanyaId ) ;

   /**
    * Cerca tots els establiments activos de unos tipos determinados <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection establimentCercaTotsActivosByTipos( java.lang.Long campanyaId,java.lang.Object[] tipos ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void establimentCrear( es.caib.gestoli.logic.model.Establiment est ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long establimentCrear( es.caib.gestoli.logic.model.Campanya campanya,java.lang.Long idOriginal,java.lang.String establecimiento,java.lang.String cif,java.lang.String direccion,java.lang.Long localidad,java.lang.String cpostal,java.lang.String email,java.lang.String telefono,java.lang.String fax,java.lang.Integer trabajadores,java.lang.Double superficie,java.lang.Long tipoEstablecimientoId,java.lang.String nombresolicitante,java.lang.String dnisolicitante,java.lang.String nombreresponsable,java.lang.String dniresponsable,java.lang.String perfil,java.lang.String telefonosolicitante,java.lang.String unidadmedida,java.lang.String observaciones,java.lang.Integer tempMaximaPasta,java.lang.Double capacidadProduccion,java.lang.Boolean envasadoManual,java.lang.Boolean etiquetadoManual,java.lang.Long[] marcasArray,java.lang.String codiRB,java.lang.String codiRC,java.lang.String codiRT,java.lang.Boolean olivaTaula ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void establimentModificar( es.caib.gestoli.logic.model.Campanya campanya,java.lang.Long idOriginal,java.lang.String establecimiento,java.lang.String cif,java.lang.String direccion,java.lang.Long localidad,java.lang.String cpostal,java.lang.String email,java.lang.String telefono,java.lang.String fax,java.lang.Integer trabajadores,java.lang.Double superficie,java.lang.Long tipoEstablecimientoId,java.lang.String nombresolicitante,java.lang.String dnisolicitante,java.lang.String nombreresponsable,java.lang.String dniresponsable,java.lang.String perfil,java.lang.String telefonosolicitante,java.lang.String unidadmedida,java.lang.String observaciones,java.lang.Integer tempMaximaPasta,java.lang.Double capacidadProduccion,java.lang.Boolean envasadoManual,java.lang.Boolean etiquetadoManual,java.lang.Boolean activo,java.lang.Long establecimientoId,java.lang.Long[] marcasArray,java.lang.String cambioEstado,java.lang.String codiRB,java.lang.String codiRC,java.lang.String codiRT,java.lang.Boolean olivaTaula ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void establimentModificar( es.caib.gestoli.logic.model.Establiment establiment ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public void establimentEsborrar( java.lang.Long id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Establiment establimentAmbId( java.lang.Long id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Establiment establimentAmbIdOriginal( java.lang.Long id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Establiment getEstablecimientoByUsuari( java.lang.Long idUsuario ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Establiment getEstablecimientoActivoByUsuari( java.lang.Long idUsuario,java.lang.Long idCampanya ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.lang.Boolean getExistenEnvasadoresActivoByMarca( java.lang.Long idMarca,java.lang.Long idCampanya,java.lang.Integer tipusEstablimentTafonaEnvasadora,java.lang.Integer tipusEstablimentEnvasadora ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Olivicultor olivicultorAmbId( java.lang.Long olivicultorId ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Olivicultor olivicultorUsuari( java.lang.Long id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Olivicultor olivicultorUsuari( java.lang.Long id,java.lang.Long idCampanya ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public boolean olivicultorUsuariTieneFincas( java.lang.Long id,java.lang.Long idCampanya ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public void olivicultorEsborrar( java.lang.Long olivicultorId ) ;

   /**
    * Cerca tots les olivicultores <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection olivicultorCercaTots(  ) ;

   /**
    * Cerca tots les olivicultores <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection olivicultorCercaTotsEliminats(  ) ;

   /**
    * Cerca tots les olivicultores <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findAllOlivicultorsByCampanyaOrderedByCodiDODesc( java.lang.Long campanyaId ) ;

   /**
    * Cerca tots les olivicultores <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findAllOlivicultorsByCampanyaOrderedByCodiDODescAmbFiltre( java.lang.Long campanyaId,java.lang.String cerca ) ;

   /**
    * Cerca tots les olivicultores <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findAllOlivicultorsEnCampanyaActualOrderedByNom(  ) ;

   /**
    * Cerca tots les olivicultores <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findOlivicultorsAltaDOCartillaByCampanya( java.lang.Long campanyaId ) ;

   /**
    * Cerca tots les olivicultores con DO y cartilla, ordenados por campo nombre <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findOlivicultorsAltaDOCartillaByCampanyaOrderNom( java.lang.Long campanyaId ) ;

   /**
    * Cerca todos los olivicultores dados de alta en la DO de la campanya actual <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findOlivicultorsAltaDOenCampanyaActual(  ) ;

   /**
    * Recupera todos los olivicultores dados de alta en la DO de la campanya actual SIN CARTILLA <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findOlivicultorsAltaDOSinCartillaEnCampanyaActual(  ) ;

   /**
    * Recupera todos los olivicultores dados de alta en la DO de la campanya actual SIN CARTILLA y que no estén subvencionados <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findOlivicultorsAltaDOSinCartillaNoSubvencionadosEnCampanyaActual(  ) ;

   /**
    * Cerca todos los olivicultores dados de alta en la DO de la campanya dada tots <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findAllAltaDOByCampanya( java.lang.Long campanyaId ) ;

   /**
    * Cerca todos los olivicultores dados de alta en la DO de la campanya dada productors RA <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findAllAltaDOByCampanyaRA( java.lang.Long campanyaId ) ;

   /**
    * Cerca todos los olivicultores dados de alta en la DO de la campanya dada productors RE <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findAllAltaDOByCampanyaRE( java.lang.Long campanyaId ) ;

   /**
    * Cerca todos los olivicultores dados de alta en la DO de la campanya dada productors RT <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findAllAltaDOByCampanyaRT( java.lang.Long campanyaId ) ;

   /**
    * Cerca todos los olivicultores dados de alta en la DO de la campanya donada tots <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findAllIdAltaDOByCampanya( java.lang.Long campanyaId ) ;

   /**
    * Cerca todos los olivicultores dados de alta en la DO de la campanya donada productors RA <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findAllIdAltaDOByCampanyaRA( java.lang.Long campanyaId ) ;

   /**
    * Cerca todos los olivicultores dados de alta en la DO de la campanya donada productors RE <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findAllIdAltaDOByCampanyaRE( java.lang.Long campanyaId ) ;

   /**
    * Cerca todos los olivicultores dados de alta en la DO de la campanya donada productors RT <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findAllIdAltaDOByCampanyaRT( java.lang.Long campanyaId ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long olivicultorCrear( java.lang.Long usuariId,es.caib.gestoli.logic.model.Campanya campanya,java.lang.Long idOriginal,java.lang.Boolean teCodiDO,java.lang.Boolean teCodiDOExperimental,java.lang.Boolean teCodiDOPOliva,java.lang.String nom,java.lang.String telefon,java.lang.String email,java.lang.String fax,java.lang.String direccio,java.lang.Long poblacio,java.lang.String codiPostal,java.lang.String compteBancari,java.lang.Boolean altaDO,java.lang.Boolean cartilla,java.lang.String nif,java.lang.String observacions,java.lang.String uidRfid,java.lang.Boolean subvencionat ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void olivicultorModificar( java.lang.Long usuariId,es.caib.gestoli.logic.model.Campanya campanya,java.lang.Long idOriginal,java.lang.Boolean teCodiDO,java.lang.Boolean teCodiDOExperimental,java.lang.Boolean teCodiDOPOliva,java.lang.String nom,java.lang.String telefon,java.lang.String email,java.lang.String fax,java.lang.String direccio,java.lang.Long poblacio,java.lang.String codiPostal,java.lang.String compteBancari,java.lang.Boolean altaDO,java.lang.Boolean cartilla,java.lang.String nif,java.lang.String observacions,java.lang.Long olivicultorId,java.lang.String uidRfid,java.lang.Boolean subvencionat ) ;

   /**
    * Cerca tots las fincas <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection fincasCercaTots(  ) ;

   /**
    * Cerca tots las fincas <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection fincasOlivicultorCercaTots( java.lang.Long idOlivicultor ) ;

   /**
    * Cerca tots las fincas <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection fincasOlivicultorCercaTotsActius( java.lang.Long idOlivicultor ) ;

   /**
    * Cerca tots las fincas <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection fincasOlivicultorCercaTotsActiusConPlantacionesConDescomposicion( java.lang.Long idOlivicultor ) ;

   /**
    * Cerca tots las fincas <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection fincasIdOlivicultorCercaTots( java.lang.Long idOlivicultor ) ;

   /**
    * Cerca tots las id de las plantaciones activas de idFincas <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection idPlantacionesActivas( java.lang.Long idFinca ) ;

   /**
    * Cerca totes les plantacions <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findPlantacions(  ) ;

   /**
    * Hacer inactiva plantacion idPlantacio <!-- begin-xdoclet-definition -->
    */
   public void plantacioSetActiuFalse( java.lang.Long idPlantacio ) ;

   /**
    * Cerca tots las plantaciones de una finca <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection getPlantacionesDeFinca( java.lang.Long fincaId ) ;

   /**
    * Cerca tots las plantaciones de una finca <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection getPlantacionesActivasDeFinca( java.lang.Long fincaId ) ;

   /**
    * Cerca tots las plantaciones de una finca <!-- begin-xdoclet-definition -->
    */
   public java.util.List plantacionesActivasConDescomposicionesByFinca( java.lang.Long fincaId ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Finca fincaAmbId( java.lang.Long id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public void fincaEsborrar( java.lang.Long fincaId ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long fincaCrear( java.lang.String nombre,java.lang.Long olivicultorId,java.lang.String observaciones,java.lang.Boolean activo ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void fincaModificar( java.lang.Long fincaId,java.lang.String nombre,java.lang.String observaciones,java.lang.Boolean activo ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Plantacio plantacioAmbId( java.lang.Long id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.DescomposicioPlantacio descomposicioPlantacioAmbId( java.lang.Long id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection descomposicioPlantacioAmbIdPlantacio( java.lang.Long id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection descomposicioPlantaciones(  ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.List descomposicioPlantacioActivasByOlivicultor( java.lang.Long idOlivicultor ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.DescomposicioPlantacio descomposicioPlantacioByPlantacioIdVariedadId( java.lang.Long idPlantacio,java.lang.Integer idVariedad ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection descomposicioVariedades(  ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection descomposicioVarietatsNoExperimentals(  ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection descomposicioPartidaOlivaByDescomposicioPlantacio( java.lang.Long descId ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.VarietatOliva variedadAmbId( java.lang.Integer id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.List varietatsOlivaByOlivicultor( java.lang.Long idOlivicultor ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.List totesVarietatsOlivaByOlivicultor( java.lang.Long idOlivicultor ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.List varietatsOlivaByOlivicultorPlantacio( java.lang.Long idOlivicultor,java.lang.Long idPlantacio ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection varietatsOliva(  ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection varietatsOlivaActiu(  ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void descomposicioPlantacioModificar( java.lang.Long[] idDescomposicioPlantacio,java.lang.String[] idVariedadOliva,java.lang.Integer[] numOlivos,java.lang.Double[] superf,java.lang.Double[] prodMaxima,java.lang.Long idPlantacion,java.lang.String observaciones,es.caib.gestoli.logic.model.Plantacio plantacio,es.caib.gestoli.logic.model.VarietatOliva variedadOliva ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection getDescPlantacioActivasAmbFinca( java.lang.Long idFinca ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Plantacio plantacioModificar( es.caib.gestoli.logic.model.Plantacio plantacio,java.util.Collection col ) throws java.lang.Exception;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void plantacioEsborrar( java.lang.Long id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void plantacioBaixa( java.lang.Long id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.List PlantacioActivasByIdOlivicultor( java.lang.Long idOlivicultor ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.List plantacioActivasConDescomposicionesByIdOlivicultor( java.lang.Long idOlivicultor ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void descomposicionesModificar( java.util.Collection col ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void borrarDescomposicio( es.caib.gestoli.logic.model.DescomposicioPlantacio desc ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void borrarDescomposiciones( java.lang.Long idDesc ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.List zonaActiusAmbEstabliment( java.lang.Long establimentId ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.List zonaAmbEstabliment( java.lang.Long establimentId ) ;

   /**
    * Cerca tots las zonas <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection zonaCercaTots(  ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public void zonaEsborrar( java.lang.Long id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Zona zonaAmbId( java.lang.Long id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long zonaCrear( java.lang.String nombre,java.lang.Long idEstablecimiento,java.lang.Long imagePlanol,java.lang.String observaciones,java.lang.Boolean activo,java.lang.Boolean defecte,java.lang.Boolean defecteTrasllat,java.lang.Boolean fictici,java.lang.String arxiuNom,java.lang.String arxiuTipusMime,byte[] arxiuContingut,java.lang.Long idOriginal ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long zonaModificar( java.lang.String nombre,java.lang.Long idEstablecimiento,java.lang.Long imagePlanol,java.lang.String observaciones,java.lang.Boolean activo,java.lang.Boolean defecte,java.lang.Boolean defecteTrasllat,java.lang.Boolean fictici,java.lang.Long zonaId,java.lang.String arxiuNom,java.lang.String arxiuTipusMime,byte[] arxiuContingut,java.lang.Long idOriginal,java.lang.String cambioEstado ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long zonaModificar( es.caib.gestoli.logic.model.Zona zona ) ;

   /**
    * Cerca si existen zonas activass para un establecimiento <!-- begin-xdoclet-definition -->
    */
   public java.lang.Boolean existenZonasActiusEnEstabliment( java.lang.Long establimentId ) ;

   /**
    * Comprueba si la zona es ficticia <!-- begin-xdoclet-definition -->
    */
   public boolean zonaFicticia( java.lang.Long id ) ;

   /**
    * Cerca tots las diposits <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection dipositCercaTots(  ) ;

   /**
    * Cerca tots las diposits de l'establiment<!-- begin-xdoclet-definition -->
    */
   public java.util.Collection dipositCercaTotsNoFicticisPerEstabliment( java.lang.Long idEstabliment ) ;

   /**
    * Cerca tots els diposits buits <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection dipositCercaTotsBuits( java.lang.Long idEstabliment ) ;

   /**
    * Cerca tots els lots d'un establiment <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection lotCercaTotsPerEstabliment( java.lang.Long idEstabliment ) ;

   /**
    * Cerca tots els lots d'un establiment <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findLotBotellesPerEstabliment( java.lang.Long idEstabliment ) ;

   /**
    * Cerca tots els lots buits <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection lotCercaTotsBuits( java.lang.Long idEstabliment ) ;

   /**
    * Cerca tots los materiales de diposits <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection materialesDipCercaTots(  ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public void dipositEsborrar( java.lang.Long id ) ;

   /**
    * Cerca tots las diposits de un establiment <!-- begin-xdoclet-definition -->
    */
   public java.util.List findDipositsByEstabliment( java.lang.Long establimentId ) ;

   /**
    * Cerca tots las diposits de un establiment <!-- begin-xdoclet-definition -->
    */
   public java.util.List findDipositsActiusByEstabliment( java.lang.Long establimentId ) ;

   /**
    * Cerca tots las diposits de un establiment <!-- begin-xdoclet-definition -->
    */
   public java.util.List findDipositsQueHanPassatPerEstabliment( java.lang.Long establimentId ) ;

   /**
    * Cerca tots las diposits de un establiment <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findTrasllatsPerEstabliment( java.lang.Long establimentId,java.lang.Long dipositId,java.util.Date inici,java.util.Date fi ) ;

   /**
    * Cerca tots las diposits de un establiment <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Diposit findDipositFicticiByEstabliment( java.lang.Long establimentId ) ;

   /**
    * Cerca tots las diposits no ficticis de un establiment <!-- begin-xdoclet-definition -->
    */
   public java.util.List findNoFicticiByEstabliment( java.lang.Long establimentId ) ;

   /**
    * Cerca tots las diposits de un establiment <!-- begin-xdoclet-definition -->
    */
   public boolean existeixenDipositsTraslladatsByEstabliment( java.lang.Long establimentId,java.lang.String codiDiposit ) ;

   /**
    * Cerca tots las diposits de una zona <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findDipositsActiusByZona( java.lang.Long zonaId ) ;

   /**
    * Cerca tots las diposits de una zona <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findDipositsActiusByZonaNoTraslladats( java.lang.Long zonaId ) ;

   /**
    * Cerca tots las diposits de una zona <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findDipositsActiusByZonaNoFicticio( java.lang.Long zonaId ) ;

   /**
    * Cerca tots las diposits de una zona no vacios y que pertenecen a unas determinadas categorias <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findDipositsActiusNoVaciosByZonaAndCategorias( java.lang.Long zonaId,java.lang.Object[] categorias ) ;

   /**
    * Cerca tots las diposits de una zona no vacios ni traslladats i que pertenecen a unas determinadas categorias <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findDipositsActiusNoVaciosNiTraslladatsByZonaAndCategorias( java.lang.Long zonaId,java.lang.Object[] categorias ) ;

   /**
    * Retorna un llista de tots els diposits associats aa una zona de unas categorias determinadas y no pendientes de traslado <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findNoVaciosByZonaAndCategoriasNoPendnientesDeTraslado( java.lang.Long zonaId,java.lang.Object[] categorias ) ;

   /**
    * Cerca tots las diposits de una zona ,vacios o no llenos que pertenecen a unas determinadas categorias <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findDipositsActiusNoLlenosByZonaAndCategorias( java.lang.Long zonaId,java.lang.Object[] categorias ) ;

   /**
    * Cerca totes les partides d'oliva d'una zona <!-- begin-xdoclet-definition -->
    */
   public void partidaOlivaModificar( es.caib.gestoli.logic.model.PartidaOliva partidaOliva ) ;

   /**
    * Cerca totes les partides d'oliva d'una zona <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findPartidesNoUsadasByZona( java.lang.Long zonaId ) ;

   /**
    * Cerca totes les partides d'oliva d'una zona <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findPartidesPerOliNoUsadasByZona( java.lang.Long zonaId ) ;

   /**
    * Cerca totes les partides d'oliva de taula d'una zona <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findPartidesOlivaTaulaNoUsadasByZona( java.lang.Long zonaId ) ;

   /**
    * Cerca totes les lotes d'oli d'una zona que pertenecen a una determinadas categorias y que no estan etiquetats <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findLotesNoEtiquetadosByZonaAndCategorias( java.lang.Long zonaId,java.lang.Object[] categorias ) ;

   /**
    * Cerca totes les lotes d'oli d'una zona que pertenecen a una determinadas categorias y que no estan etiquetats <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findLotesByZonaAndCategorias( java.lang.Long zonaId,java.lang.Object[] categorias ) ;

   /**
    * Cerca totes les lotes d'oliva de taula d'una zona que pertenecen a una determinadas categorias y que no estan etiquetats <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findLotesOlivaTaulaByZona( java.lang.Long zonaId ) ;

   /**
    * Cerca totes les lotes d'oli d'una zona <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findLotesByEtiquetaje( java.lang.Long etiId ) ;

   /**
    * Cerca totes les lotes d'oli no vendidos d'una zona <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findLotesNoVendidosByZona( java.lang.Long zonaId,boolean showCreatTancament ) ;

   /**
    * Cerca totes les lotes d'oliva no vendidos d'una zona <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findLotesNoVendidosByZona( java.lang.Long zonaId,boolean showCreatTancament,boolean mostrarOlivaTaula ) ;

   /**
    * Situa un contenidor a dins la imatge d'una zona <!-- begin-xdoclet-definition -->
    */
   public void loteSituar( java.lang.Long id,java.lang.Long establimentId,java.lang.Long zonaId,java.lang.Integer posx,java.lang.Integer posy ) ;

   /**
    * Situa un contenidor a dins la imatge d'una zona <!-- begin-xdoclet-definition -->
    */
   public void botaSituar( java.lang.Long id,java.lang.Long establimentId,java.lang.Long zonaId,java.lang.Integer posx,java.lang.Integer posy ) ;

   /**
    * Cerca una bota amb id <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Bota botaAmbId( java.lang.Long id ) ;

   /**
    * Cerca un lot amb id <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Lot lotAmbId( java.lang.Long id ) ;

   /**
    * Cerca un lot amb nom i producte <!-- begin-xdoclet-definition -->
    */
   public java.util.List lotAmbNomIProducte( java.lang.String nom,java.lang.Long idProducte ) ;

   /**
    * Esborra un lot amb id <!-- begin-xdoclet-definition -->
    * @generated     */
   public void lotEsborrar( java.lang.Long id ) ;

   /**
    * Cerca si existen depósitos activos en una zona zonaId <!-- begin-xdoclet-definition -->
    */
   public java.lang.Boolean existenDipositsActiusEnZona( java.lang.Long zonaId ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Diposit dipositAmbId( java.lang.Long id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.PartidaOliva partidaAmbId( java.lang.Long id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.PartidaFonoll partidaFonollAmbId( java.lang.Long id ) ;

   /**
    * Totes les partides de fonoll <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findPartidesFonollByEstabliment( java.lang.Long idEstabliment,java.lang.Boolean valid ) ;

   /**
    * Situa un contenidor a dins la imatge d'una zona <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Elaboracio elaboracioAmbId( java.lang.Long id,java.lang.Boolean valid ) ;

   /**
    * Situa un contenidor a dins la imatge d'una zona <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findLotsTalcPerEstabliment( java.lang.Long id,java.lang.Boolean valid ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long elaboracioModificarImpresions( java.lang.Long elaboracioId,java.lang.Integer numPrintsDocRendiment ) ;

   /**
    * Situa un contenidor a dins la imatge d'una zona <!-- begin-xdoclet-definition -->
    */
   public void dipositSituar( java.lang.Long id,java.lang.Long establimentId,java.lang.Long zonaId,java.lang.Integer posx,java.lang.Integer posy ) ;

   /**
    * Situa una partida d'oliva a dins la imatge d'una zona <!-- begin-xdoclet-definition -->
    */
   public void partidaSituar( java.lang.Long id,java.lang.Long establimentId,java.lang.Long zonaId,java.lang.Integer posx,java.lang.Integer posy ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long dipositCrear( java.lang.Double capacitat,java.lang.String codiAssignat,java.lang.Long idEstabliment,java.lang.Long idZona,java.lang.Integer idMaterialDiposit,java.lang.String observaciones,java.lang.Boolean activo,java.lang.Boolean fictici,java.lang.Boolean deEnvasadora ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long dipositModificar( java.lang.Double capacitat,java.lang.String codiAssignant,java.lang.Long idEstabliment,java.lang.Long idZona,java.lang.Integer idMaterialDiposit,java.lang.String observaciones,java.lang.Boolean activo,java.lang.Boolean fictici,java.lang.Long dipositId,java.lang.Boolean deEnvasadora ) ;

   /**
    * Cerca la campanya actual <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long campanyaCercaActual(  ) ;

   /**
    * Devuelve todas las campanyas <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection campanyaCercaTotes(  ) ;

   /**
    * Cerca una campanya amb id <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Campanya campanyaAmbId( java.lang.Integer id ) ;

   /**
    * Validacion de que no exista otra campaña con el mismo nombre <!-- begin-xdoclet-definition -->
    */
   public boolean existeCampanyaMismoNombre( java.lang.String nom ) ;

   /**
    * Consigue el numero de descomposiciones activas para la campanya actual <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long getNumeroDescomposicionsActivesCampanyaActual(  ) ;

   /**
    * Creacio d'una nova campanya <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long campanyaCrear( es.caib.gestoli.logic.model.Campanya campanya,java.lang.String novaCampanya ) ;

   /**
    * crea o modifica una factura amb id <!-- begin-xdoclet-definition -->
    */
   public void facturaCreaModifica( es.caib.gestoli.logic.model.Factura factura ) ;

   /**
    * Cerca una factura amb id <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Factura facturaCercaOliId( java.lang.Long id ) ;

   /**
    * Cerca una factura amb id <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Factura facturaAnyCercaOliId( int any,java.lang.Long id ) ;

   /**
    * Cerca maxim de numeracio per un any <!-- begin-xdoclet-definition -->
    */
   public java.lang.Integer facturaGetMaxNumeracionParaAnyo( java.lang.Integer anyo ) ;

   /**
    * Comprueba si existe la factura <!-- begin-xdoclet-definition -->
    */
   public boolean facturaExisteByOliId( java.lang.Long id ) ;

   /**
    * Comprueba si existe la factura <!-- begin-xdoclet-definition -->
    */
   public java.lang.Boolean existenAccionesPendientesByEstablecimiento( java.lang.Long Establimentid ) ;

   /**
    * Comprueba si existe la factura <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findTrasllatsNoCompletados(  ) ;

   /**
    * Recupera las facturas de la campaña actual <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection facturaFindByCampanyaAltaDOCartilla( java.lang.Long campanyaId ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public java.util.Collection lotesInfo( java.lang.Object[] seleccio ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public java.util.Collection lotesOlivaTaulaInfo( java.lang.Object[] seleccio ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public java.util.Collection dipositsInfo( java.lang.Object[] seleccio ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public java.util.Collection partidasInfo( java.lang.Object[] seleccio ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public java.util.Collection botesInfo( java.lang.Object[] seleccio ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection varietatsOli(  ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public int calcularVarietatOli( java.lang.Long[] idsSensorial,java.lang.String[] valorsSensorial,java.lang.Long[] idsFisicoQuimic,java.lang.String[] valorsFisicoQuimic,java.lang.Double acidesa,java.lang.Double ACIDESA_VERGE_EXTRA,java.lang.Double ACIDESA_VERGE ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.VarietatOli getVarietatOliById( java.lang.Integer id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Analitica analiticaAmbId( java.lang.Long id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.AutocontrolOliva autocontrolAmbId( java.lang.Long id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void analiticaEsborrar( es.caib.gestoli.logic.model.Analitica analitica ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void autocontrolEsborrar( es.caib.gestoli.logic.model.AutocontrolOliva autocontrol ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection analiticaParametreLlistat(  ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection analiticaParametreByParametreTipusIVarietat( java.lang.Long idAnaliticaParametreTipus,java.lang.Integer idVarietat ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection analiticaParametreByParametreTipus( java.lang.Long idAnaliticaParametreTipus ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.AnaliticaParametre analiticaParametreAmbId( java.lang.Long id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection analiticaParametreTipusLlistat(  ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection analiticaParametreTipusLlistatActius(  ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.List analiticaParametreTipusLlistatActius( int tipuscontrol ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.AnaliticaParametreTipus analiticaParametreTipusAmbId( java.lang.Long id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void analiticaParametreCrear( es.caib.gestoli.logic.model.AnaliticaParametre analiticaParametre ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void analiticaParametreModificar( es.caib.gestoli.logic.model.AnaliticaParametre analiticaParametre ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void analiticaParametreEsborrar( java.lang.Long id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void analiticaParametreTipusCrear( es.caib.gestoli.logic.model.AnaliticaParametreTipus analiticaParametreTipus ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void analiticaParametreTipusModificar( es.caib.gestoli.logic.model.AnaliticaParametreTipus analiticaParametreTipus ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void analiticaParametreTipusEsborrar( java.lang.Long id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void analiticaValorCrear( es.caib.gestoli.logic.model.AnaliticaValor analiticaValor ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void analiticaValorEsborrar( es.caib.gestoli.logic.model.AnaliticaValor analiticaValor ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection analiticaValorByIdAnalitica( java.lang.Long idAnalitica ) ;

   /**
    * Cerca tots els categorias d'oli <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection categoriaOliCercaTots(  ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.CategoriaOli findCategoriaOliById( java.lang.Integer idCategotia ) ;

   /**
    * Guarda el uid de tarjeta para un olivicultor y una campanya <!-- begin-xdoclet-definition -->
    */
   public void olivicultorGrabaUidTarjeta( java.lang.String uid,java.lang.Long oliCod ) ;

   /**
    * Guarda el uid de tarjeta para un olivicultor y una campanya <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection getMarcasEstabliment( java.lang.Long idEstabliment ) ;

   /**
    * Llistat de marques d'oliva de taula per establiment <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection getMarcasOlivaTaulaEstabliment( java.lang.Long idEstabliment ) ;

   /**
    * Devuelve Traslados de depositos por establecimiento pendientes de ser aceptados <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findTrasllatsByEstablimentPendientesAceptar( java.lang.Long establimentId ) ;

   /**
    * Devuelve Traslados de depositos por establecimiento pendientes de ser devueltos <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findTrasllatsByEstablimentPendientesDevolver( java.lang.Long establimentId ) ;

   /**
    * Devuelve Traslados de depositos por establecimiento pendientes de ser devueltos <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findTrasllatsByEstablimentPendientesAceptarDevolver( java.lang.Long establimentId ) ;

   /**
    * Devuelve el Traslado con el id dado <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Trasllat findTrasllatById( java.lang.Long idT ) ;

   /**
    * Añade todos los registros necesarios para el trasvase del aceite
    * @param data
    * @param dipositsOrigen
    * @param establimentDesti
    * @param establiment
    * @throws Exception <!-- begin-xdoclet-definition -->
    */
   public boolean findContenidorEnCami( java.lang.Long idDiposit ) ;

   /**
    * Añade todos los registros necesarios para la elaboración del aceite <!-- begin-xdoclet-definition -->
    */
   public void generarExistenciesDiposit( es.caib.gestoli.logic.model.Diposit diposit,es.caib.gestoli.logic.model.EntradaDiposit entrada ) throws java.lang.Exception;

   /**
    * Añade todos los registros necesarios para la elaboración del aceite <!-- begin-xdoclet-definition -->
    */
   public void sortidaOliDiposit( es.caib.gestoli.logic.model.SortidaDiposit sortidaDiposit,boolean desqualificar ) throws java.lang.Exception;

   /**
    * Compruova si existeix algun lot en la BBDD amb el mateix nom de partida <!-- begin-xdoclet-definition -->
    */
   public boolean existeixNomPartida( java.lang.String nomPartida,java.lang.Long idEstabliment ) ;

   /**
    * Llistat de tots els municipis <!-- begin-xdoclet-definition -->
    */
   public java.util.List obtenirMunicipis(  ) ;

   /**
    * Totes les partides d'oli <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection partidesOli(  ) ;

   /**
    * Totes les partides d'oli visibles <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection partidesOliVisibles(  ) ;

   /**
    * Totes les partides d'oli <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findPartidesOliByEstabliment( java.lang.Long idEstabliment ) ;

   /**
    * Totes les partides d'oli <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findPartidesOliVisiblesByEstabliment( java.lang.Long idEstabliment ) ;

   /**
    * Totes les partides d'oli <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findPartidesOliByEstablimentExceptDO( java.lang.Long idEstabliment ) ;

   /**
    * Totes les partides d'oli <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findPartidesOliVisiblesByEstablimentExceptDO( java.lang.Long idEstabliment ) ;

   /**
    * Totes les partides d'oli <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection partidesOliExcepteDO(  ) ;

   /**
    * Totes les partides d'oli <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection partidesOliVisiblesExcepteDO(  ) ;

   /**
    * Partida d'oli amb d'identificador especificat <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.PartidaOli getPartidaOliById( java.lang.Long id ) ;

   /**
    * Partida d'oli amb d'identificador especificat <!-- begin-xdoclet-definition -->
    */
   public void partidaOliEsborrar( java.lang.Long id ) ;

   /**
    * Modifica la partida d'oli amb d'identificador especificat <!-- begin-xdoclet-definition -->
    */
   public void modificaPartidaOli( java.lang.Long id,java.lang.String nom,java.lang.Integer categoriaId,java.lang.Boolean actiu,java.lang.Boolean esVisualitza,java.lang.Boolean esEcologica ) ;

   /**
    * Modifica la partida d'oli amb d'identificador especificat <!-- begin-xdoclet-definition -->
    */
   public void modificaPartidaOli( java.lang.Long id,java.lang.String nom,java.lang.Integer categoriaId,java.lang.Boolean actiu,java.lang.Boolean olivicultorEsPropietari,java.lang.Boolean esVisualitza,java.lang.Boolean esEcologica ) ;

   /**
    * Desactiva les partides d'oli amb els identificadors especificats <!-- begin-xdoclet-definition -->
    */
   public void desactivaPartidesOli( java.util.List partidesOli ) ;

   /**
    * Oculta les partides d'oli amb els identificadors especificats <!-- begin-xdoclet-definition -->
    */
   public void ocultaPartidesOli( java.util.List partidesOli ) ;

   /**
    * Crea una nova partida d'oli <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long creaPartidaOli( java.lang.String nom,java.lang.Integer categoriaId,java.lang.Boolean actiu,es.caib.gestoli.logic.model.Establiment establiment,java.lang.Boolean esVisualitza,java.lang.Boolean olivicultorEsPropietari,java.lang.Boolean esEcologic ) ;

   /**
    * Comprova si existeixen partides amb el nom indicat <!-- begin-xdoclet-definition -->
    */
   public java.lang.Boolean existeixPartidaEstabliment( java.lang.Long partidaOliId,java.lang.String partidaOliNom,java.lang.Long establimentId ) ;

   /**
    * Comprova si existeixen partides amb el nom indicat <!-- begin-xdoclet-definition -->
    */
   public java.lang.Boolean partidaCorrecteAnalitica( java.lang.Long partidaOliId,java.lang.Long dipositId ) ;

   /**
    * Comprova si existeixen elaboracions associats a la partida d'oli <!-- begin-xdoclet-definition -->
    */
   public java.lang.Boolean existeixenElaboracionsAssociadesPartidesOli( java.lang.Long lid ) ;

   /**
    * Comprova si existeixen entrades de diposits associats a la partida d'oli <!-- begin-xdoclet-definition -->
    */
   public java.lang.Boolean existeixenEntradesDipositsAssociatsPartidesOli( java.lang.Long lid ) ;

   /**
    * Comprova si existeixen sortides de diposit associats a la partida d'oli <!-- begin-xdoclet-definition -->
    */
   public java.lang.Boolean existeixenSortidesDipositsAssociatsPartidesOli( java.lang.Long lid ) ;

   /**
    * Comprova si existeixen lots associats a la partida d'oli <!-- begin-xdoclet-definition -->
    */
   public java.lang.Boolean existeixenLotsAssociatsPartidesOli( java.lang.Long lid ) ;

   /**
    * Comprova si existeixen diposits associats a la partida d'oli <!-- begin-xdoclet-definition -->
    */
   public java.lang.Boolean existeixenDipositsAssociatsPartidesOli( java.lang.Long lid ) ;

   /**
    * set the hibernate template.
    * @param hibernateTemplate the hibernate spring template. <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection municipis(  ) ;

   /**
    * Municipi que té la id indicada <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Municipi municipiAmbId( java.lang.Long id ) ;

   /**
    * Municipi que té el nom indicat <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Municipi municipiAmbNom( java.lang.String nom ) ;

   /**
    * set the hibernate template.
    * @param hibernateTemplate the hibernate spring template. <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection paisos(  ) ;

   /**
    * set the hibernate template.
    * @param hibernateTemplate the hibernate spring template. <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Pais paisAmbId( java.lang.Long id ) ;

   /**
    * set the hibernate template.
    * @param hibernateTemplate the hibernate spring template. <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Pais paisAmbNom( java.lang.String nom ) ;

   /**
    * set the hibernate template.
    * @param hibernateTemplate the hibernate spring template. <!-- begin-xdoclet-definition -->
    */
   public void actualitzarPais( es.caib.gestoli.logic.model.Pais pais ) ;

   /**
    * set the hibernate template.
    * @param hibernateTemplate the hibernate spring template. <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection provincies(  ) ;

   /**
    * set the hibernate template.
    * @param hibernateTemplate the hibernate spring template. <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Provincia provinciaAmbId( java.lang.Long id ) ;

   /**
    * set the hibernate template.
    * @param hibernateTemplate the hibernate spring template. <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Provincia provinciaAmbNom( java.lang.String nom ) ;

   /**
    * Finques que estan donades de baixa a l'aplicació <!-- begin-xdoclet-definition -->
    */
   public java.util.List finquesDeBaixa(  ) ;

   /**
    * Actualitza una finca. <!-- begin-xdoclet-definition -->
    */
   public void finquesActualitzar( es.caib.gestoli.logic.model.Finca finca ) ;

   /**
    * Actualitza un olivicultor. <!-- begin-xdoclet-definition -->
    */
   public void olivicultorActualitzar( es.caib.gestoli.logic.model.Olivicultor olivicultor ) ;

   /**
    * Plantacions que estan donades de baixa a l'aplicació <!-- begin-xdoclet-definition -->
    */
   public java.util.List plantacionsDeBaixa(  ) ;

   /**
    * Actualitza una plantació. <!-- begin-xdoclet-definition -->
    */
   public void plantacioActualitzar( es.caib.gestoli.logic.model.Plantacio plantacio ) ;

   /**
    * Guarda un olivicultor a l'historic. <!-- begin-xdoclet-definition -->
    */
   public void guardaHistoricOlivicultor( es.caib.gestoli.logic.model.Olivicultor olivicultor,java.lang.String tipus ) ;

   /**
    * Guarda un olivicultor a l'historic. <!-- begin-xdoclet-definition -->
    */
   public void guardaHistoricOlivicultorIFinques( es.caib.gestoli.logic.model.Olivicultor olivicultor ) ;

   /**
    * Torna el llistat d'històrics d'olivicultors. <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection historicsOlivicultors(  ) ;

   /**
    * Guarda un establiment a l'històric. <!-- begin-xdoclet-definition -->
    */
   public void guardaHistoricEstabliment( es.caib.gestoli.logic.model.Establiment establiment,java.lang.String tipus ) ;

   /**
    * Guarda un establiment a l'històric. <!-- begin-xdoclet-definition -->
    */
   public void guardaHistoricEstablimentZonesIDiposits( es.caib.gestoli.logic.model.Establiment establiment ) ;

   /**
    * Crea un objecte HistoricZona amb les dades de la Zona. <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.HistoricZona historicZonaFromZona( es.caib.gestoli.logic.model.Zona z ) ;

   /**
    * Crea un objecte HistoricDiposit amb les dades del Diposit. <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.HistoricDiposit historicDipositFromDiposit( es.caib.gestoli.logic.model.Diposit d ) ;

   /**
    * Torna el llistat d'històrics d'establiments. <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection historicsEstabliments(  ) ;

   /**
    * Torna el llistat de varietats experimentals. <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection varietatOlivaExperimental(  ) ;

   /**
    * Torna el llistat de varietats per oliva de taula. <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection varietatOlivaTaula(  ) ;

   /**
    * Esborra la varietat experimental que té la id indicada. <!-- begin-xdoclet-definition -->
    */
   public void varietatOlivaExperimentalEsborrar( java.lang.Long id ) ;

   /**
    * Modifica una varitat experimental. <!-- begin-xdoclet-definition -->
    */
   public void varietatOlivaExperimentalModificar( es.caib.gestoli.logic.model.VarietatOliva varietatOliva ) ;

   /**
    * Retorna una varitat experimental. <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.VarietatOliva varietatOlivaExperimentalAmbId( java.lang.Long id ) ;

   /**
    * Crea una varitat experimental. <!-- begin-xdoclet-definition -->
    */
   public java.lang.Integer varietatOlivaExperimentalCrear( es.caib.gestoli.logic.model.VarietatOliva varietatOliva ) ;

   /**
    * set the hibernate template.
    * @param hibernateTemplate the hibernate spring template. <!-- begin-xdoclet-definition -->
    */
   public java.lang.Object[] obtenirInfoOliva( java.lang.Long dipositId ) ;

   /**
    * Retorna la categoria resultant de dues categories <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.CategoriaOli categoriaResultantMescla( es.caib.gestoli.logic.model.CategoriaOli cat1,es.caib.gestoli.logic.model.CategoriaOli cat2 ) ;

   /**
    * set the hibernate template.
    * @param hibernateTemplate the hibernate spring template. <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection obtenirVarietatsDiposit( java.lang.Long dipositId ) ;

   /**
    * set the hibernate template.
    * @param hibernateTemplate the hibernate spring template. <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection obtenirLotDiposit( java.lang.Long dipositId ) ;

   /**
    * Cerca la taxa <!-- begin-xdoclet-definition -->
    */
   public void creaHistoricLlistatFactura( es.caib.gestoli.logic.model.HistoricLlistatFactura historicLlistatFactura ) ;

   /**
    * Cerca la taxa <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.HistoricLlistatFactura findHistoricLlistatFacturaPreformaByOlivicultorAny( java.lang.String idOlivicultor,java.lang.String anyActual ) ;

   /**
    * Cerca la taxa <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.HistoricLlistatFactura findHistoricLlistatFacturaByOlivicultorAny( java.lang.String idOlivicultor,java.lang.String anyActual ) ;

   /**
    * Torna el llistat d'històrics de llistats de factures. <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection historicsLlistatsFactures(  ) ;

   /**
    * Torna les dades de la factura per l'identificador doant. <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findDadesPerIdntificador( java.lang.Long identificador ) ;

   /**
    * Torna l'identificador per la factura <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long identificadorFactura(  ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection sortidesOrujo(  ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection sortidesOrujoValides( java.lang.Boolean valid ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection sortidesOrujoAmbEstabliment( java.lang.Long establimentId,java.lang.Boolean valid ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void actualitzaSortidaOrujo( es.caib.gestoli.logic.model.SortidaOrujo sortidaOrujo ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.SortidaOrujo sortidaOrujoAmbId( java.lang.Long id ) ;

   /**
    * Modifica una sortida d'orujo. <!-- begin-xdoclet-definition -->
    */
   public void sortidaOrujoModificar( es.caib.gestoli.logic.model.SortidaOrujo sortidaOrujo ) ;

   /**
    * Crea una sortida d'orujo. <!-- begin-xdoclet-definition -->
    */
   public void sortidaOrujoCrear( es.caib.gestoli.logic.model.SortidaOrujo sortidaOrujo ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long cercaOlivicultorPerRfid( java.lang.String rfid ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Olivicultor cercaOlivicultorAmbValor( java.lang.String valor ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Olivicultor cercaOlivicultorAmbNif( java.lang.String nif ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection rendimentVarietatPerCampanya( java.lang.Long idCampanya ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void creaRendimentsVarietatsCampanya( es.caib.gestoli.logic.model.Campanya campanya,java.lang.String tipusRendiment,es.caib.gestoli.logic.model.RendimentVarietat[] rendiments ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void modificarRendimentVarietat( java.lang.Long idCampanya,java.lang.Integer idVarietat,java.lang.Double rendiment,java.lang.String tipusRendiment ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.lang.String obtenirTipusRendimentCampanyaVarietat( java.lang.Long idCampanya,java.lang.Integer idVarietat ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.lang.Double obtenirRendimentCampanyaVarietat( java.lang.Long idCampanya,java.lang.Integer idVarietat ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void modificarProduccioMaxima( java.lang.Integer idVarietat,java.lang.Double rendiment,java.lang.String tipusRendiment ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection cercaVarietatsOlivaPerPlantacions( java.lang.String ids ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection cercaVarietatsOlivaTaulaPerPlantacions( java.lang.String ids ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.lang.Double obtenirTotalProduccioRestantOlivicultor( java.lang.Long idOlivicultor ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void guardarEtiquetesLot( es.caib.gestoli.logic.model.EtiquetesLot etiquetesLot ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void eliminarEtiquetesLot( es.caib.gestoli.logic.model.EtiquetesLot etiquetesLot ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void retirarEtiquetesLot( es.caib.gestoli.logic.model.EtiquetesLot etiquetesLot ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.EtiquetesLot findEtiquetesLotById( java.lang.Long idEtiquetesLot ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findEtiquetesLotByIdLot( java.lang.Long idLot ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findEtiquetesLot(  ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findEtiquetesLotByEstabliment( java.lang.Long idEstabliment ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findEtiquetesLotOriginalsByEstabliment( java.lang.Long idEstabliment ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findEtiquetesLotByLot( java.lang.Long idLot ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findEtiquetesLotEmpradesByLot( java.lang.Long idLot,java.lang.Boolean esEcologic ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findEtiquetesLotDisponiblesByEstabliment( java.lang.Long idEstabliment ) ;

   /**
    * Devuelve un listado de elaboraciones por establecimiento <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findEtiquetesLotEmpradesByEstabliment( java.lang.Long idEstabliment ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findEtiquetesLotDisponiblesByEstablimentILot( java.lang.Long idEstabliment,es.caib.gestoli.logic.model.Lot lot,java.lang.Boolean olivaTaula,java.lang.Boolean esEcologic ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findEtiquetesLotRetiradesByEstabliment( java.lang.Long idEstabliment ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public boolean teEtiquetesLotSolapades( es.caib.gestoli.logic.model.EtiquetesLot etiquetesLot ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public boolean teEtiquetesLotFills( es.caib.gestoli.logic.model.EtiquetesLot etiquetesLot ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection sortidesDiposits(  ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection sortidesDipositsPerEstabliment( java.lang.Long establimentId ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.SortidaDiposit getSortidaDipositByTraza( java.lang.Long idTraza ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection sortidesLots(  ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection sortidesLotsPerEstabliment( java.lang.Long establimentId ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.SortidaDiposit sortidaDipositAmbId( java.lang.Long idSortida ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.SortidaLot sortidaLotAmbId( java.lang.Long idSortida ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void actualitzaSortidaDiposit( es.caib.gestoli.logic.model.SortidaDiposit sortidaDiposit ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void actualitzaSortidaLot( es.caib.gestoli.logic.model.SortidaLot sortidaLot ) ;

   /**
    * set the hibernate template.
    * @param hibernateTemplate the hibernate spring template. <!-- begin-xdoclet-definition -->
    */
   public void canviaPropietariOli( java.lang.Long id,java.lang.Integer tipus ) ;

   /**
    * Funció per consultar les coordenades geogràfiques d'un poligon i una parcela. <!-- begin-xdoclet-definition -->
    */
   public java.lang.String[] consultaCoordenades( java.lang.Long prov,java.lang.Long muni,java.lang.String poligon,java.lang.String parcela ) ;

   /**
    * set the hibernate template.
    * @param hibernateTemplate the hibernate spring template. <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.EtiquetesLot findEtiquetesLotByEtiqueta( java.lang.String lletres,java.lang.Integer numeros ) ;

   /**
    * set the hibernate template.
    * @param hibernateTemplate the hibernate spring template. <!-- begin-xdoclet-definition -->
    */
   public boolean esDataDipositCorrecte( java.util.Date data,java.lang.Long idDiposit ) ;

   /**
    * set the hibernate template.
    * @param hibernateTemplate the hibernate spring template. <!-- begin-xdoclet-definition -->
    */
   public boolean esDataLotCorrecte( java.util.Date data,java.lang.Long idLot ) ;

   /**
    * set the hibernate template.
    * @param hibernateTemplate the hibernate spring template. <!-- begin-xdoclet-definition -->
    */
   public boolean esDataPartidaOlivaCorrecte( java.util.Date data,java.lang.Long idPartidaOliva ) ;

   /**
    * set the hibernate template.
    * @param hibernateTemplate the hibernate spring template. <!-- begin-xdoclet-definition -->
    */
   public boolean esDataCampanyaCorrecte( java.util.Date data ) ;

   /**
    * set the hibernate template.
    * @param hibernateTemplate the hibernate spring template. <!-- begin-xdoclet-definition -->
    */
   public java.lang.String findResumEntradaDiposiOliByElaboracio( java.lang.Long elaId ) ;

   /**
    * set the hibernate template.
    * @param hibernateTemplate the hibernate spring template. <!-- begin-xdoclet-definition -->
    */
   public java.lang.String findResumsortidaOlivicultorByElaboracio( java.lang.Long elaId ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Producte producteAmbId( java.lang.Long id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.List producteAmbNom( java.lang.String nom,java.lang.Long idEstabliment ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection producteActiusAmbEstabliment( java.lang.Long idEst ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection producteAmbEstabliment( java.lang.Long idEst ) ;

   /**
    * Comprova si existeixen productes amb el nom indicat <!-- begin-xdoclet-definition -->
    */
   public java.lang.Boolean existeixProducteEstabliment( java.lang.Long partidaOliId,java.lang.String partidaOliNom,java.lang.Long establimentId ) ;

   /**
    * Crea un nou producte <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long creaProducte( java.lang.String nom,es.caib.gestoli.logic.model.Establiment establiment ) ;

   /**
    * Modifica un producte <!-- begin-xdoclet-definition -->
    */
   public void modificaProducte( java.lang.Long id,java.lang.String nom,java.lang.Boolean actiu ) ;

   /**
    * Elimina el producte <!-- begin-xdoclet-definition -->
    */
   public void producteEsborrar( java.lang.Long id ) ;

   /**
    * Comprova si existeixen lots associats al producte <!-- begin-xdoclet-definition -->
    */
   public java.lang.Boolean existeixenLotsAssociatsProducte( java.lang.Long lid ) ;

   /**
    * Només serveix per poder especificar els permisos amb xdoclet. <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long informacioUtilCrear( es.caib.gestoli.logic.model.InformacioUtil q ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.InformacioUtil informacioUtilAmbId( java.lang.Long id ) ;

   /**
    * Cerca totes les informacions utils<!-- begin-xdoclet-definition -->
    */
   public java.util.Collection informacioUtilCercaTots(  ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public void informacioUtilEsborrar( java.lang.Long id ) ;

   /**
    * Només serveix per poder especificar els permisos amb xdoclet. <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long gestioInfografiaCrear( es.caib.gestoli.logic.model.GestioInfografia q ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.GestioInfografia gestioInfografiaAmbId( java.lang.Long id ) ;

   /**
    * Cerca totes les informacions utils<!-- begin-xdoclet-definition -->
    */
   public java.util.Collection gestioInfografiaCercaTots(  ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public void gestioInfografiaEsborrar( java.lang.Long id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void arxiuCrear( es.caib.gestoli.logic.model.Arxiu arxiu ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Arxiu arxiuAmbId( java.lang.Long id ) ;

   /**
    * Només serveix per poder especificar els permisos amb xdoclet. <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long crearAvis( es.caib.gestoli.logic.model.Avis q ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Avis avisAmbId( java.lang.Long id ) ;

   /**
    * Cerca tots els avisos de l'establiment <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection avisCercaTotsPerEstabliment( java.lang.Long idEstabliment ) ;

   /**
    * Cerca tots els avisos pendents de l'establiment <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection avisCercaPendentsPerEstabliment( java.lang.Long idEstabliment ) ;

   /**
    * Cerca si hi ha avisos pendents a l'establiment <!-- begin-xdoclet-definition -->
    */
   public java.lang.Boolean avisExisteixenPendentsPerEstabliment( java.lang.Long idEstabliment ) ;

   /**
    * Cerca si hi ha avisos pendents a l'establiment <!-- begin-xdoclet-definition -->
    */
   public void avisActualitzaData( java.lang.Long idAvis ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public void avisEsborrar( java.lang.Long id ) ;

   /**
    * Només serveix per poder especificar els permisos amb xdoclet. <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long crearQuadernCamp( es.caib.gestoli.logic.model.QuadernCamp q ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.QuadernCamp quadernCampAmbId( java.lang.Long id ) ;

   /**
    * Cerca tots els quadernCampos de l'establiment <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection quadernCampCercaTotsPerOlivicultor( java.lang.Long idOlivicultor,java.util.Date dataInici,java.util.Date dataFi ) ;

   /**
    * Cerca tots els quadernCampos de l'establiment <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection quadernCampCercaOlivicultors(  ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public void quadernCampEsborrar( java.lang.Long id ) ;

   /**
    * Només serveix per poder especificar els permisos amb xdoclet. <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long documentInspeccioCrear( es.caib.gestoli.logic.model.DocumentInspeccio q ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.DocumentInspeccio documentInspeccioAmbId( java.lang.Long id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.List documentsInspeccioByEstabliment( java.lang.Long idEstabliment ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.List documentsInspeccioByOlivicultor( java.lang.Long idOlivicultor ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.PartidaOli getPartidaNoDOByNomAndEstabliment( java.lang.String partidaOliNom,es.caib.gestoli.logic.model.Establiment establiment ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public void documentInspeccioEsborrar( java.lang.Long id ) ;

   /**
    * Només serveix per poder especificar els permisos amb xdoclet. <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long sortidaOliFacturacioCrear( es.caib.gestoli.logic.model.SortidaOliFacturacio q ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.List sortidesOliFacturacioByImportacioEstat( java.lang.Long idImportacio,java.lang.Boolean estat ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.List sortidesOliFacturacioByImportacio( java.lang.Long idImportacio ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long sortidaOliFacturacioDarreraImportacio(  ) ;

   /**
    * Només serveix per poder especificar els permisos amb xdoclet. <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long informeCampanyaCrear( es.caib.gestoli.logic.model.InformeCampanya q ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.InformeCampanya informeCampanyaAmbId( java.lang.Long id ) ;

   /**
    * Cerca tots els informes de les campanyes <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection informeCampanyaCercaTots(  ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    * @generated     */
   public void informeCampanyaEsborrar( java.lang.Long id ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.EtiquetesLot etiquetesLotAmbId( java.lang.Long id ) ;

   /**
    * Cerca totes les botes de una zona <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection findBotesActivesByZona( java.lang.Long zonaId ) ;

   /**
    * set the hibernate template.
    * @param hibernateTemplate the hibernate spring template. <!-- begin-xdoclet-definition -->
    */
   public void setHibernateTemplate( org.springframework.orm.hibernate3.HibernateTemplate hibernateTemplate ) ;

   /**
    * get the hibernate template.
    * @return the hibernate spring template. <!-- begin-xdoclet-definition -->
    */
   public org.springframework.orm.hibernate3.HibernateTemplate getHibernateTemplate(  ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.lang.String findLastCodiRB(  ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.lang.String findLastCodiRC(  ) ;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.lang.String findLastCodiRT(  ) ;

}
