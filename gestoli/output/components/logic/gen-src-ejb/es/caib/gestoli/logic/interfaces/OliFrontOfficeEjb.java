/*
 * Generated by XDoclet - Do not edit!
 */
package es.caib.gestoli.logic.interfaces;

/**
 * Remote interface for OliFrontOfficeEjb.
 */
public interface OliFrontOfficeEjb
   extends javax.ejb.EJBObject
{
   /**
    * <!-- begin-xdoclet-definition -->
    */
   public void ejbRemove(  )
      throws java.rmi.RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.EtiquetesLot findEtiquetesLotByEtiqueta( java.lang.String lletres,java.lang.Integer numeros )
      throws java.rmi.RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.EtiquetesLot findEtiquetesLotByEtiquetaUsada( java.lang.String lletres,java.lang.Integer numeros )
      throws java.rmi.RemoteException;

   /**
    * Construeix l'arbre per a la traçabilitat resumida de l'oli.
    * @param contenidorId el contenidor per trazar l'arbre
    * @return una colecció amb la informacó per construir l'arbre. <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.util.TrazabilitatResumida trazabilitatResumidaOliDisponibleLote( java.lang.String id )
      throws java.rmi.RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.DescomposicioPartidaOliva descomposicioPartidaOlivaAmbId( java.lang.Long id )
      throws java.rmi.RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Establiment establimentAmbId( java.lang.Long id )
      throws java.rmi.RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Analitica analiticaAmbId( java.lang.Long id )
      throws java.rmi.RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Diposit dipositAmbId( java.lang.Long id )
      throws java.rmi.RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Elaboracio elaboracioAmbId( java.lang.Long id,java.lang.Boolean valid )
      throws java.rmi.RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.lang.String findResumEntradaDiposiOliByElaboracio( java.lang.Long elaId )
      throws java.rmi.RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.lang.String findResumsortidaOlivicultorByElaboracio( java.lang.Long elaId )
      throws java.rmi.RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long elaboracioModificarImpresions( java.lang.Long elaboracioId,java.lang.Integer numPrintsDocRendiment )
      throws java.rmi.RemoteException;

   /**
    * Cerca totes les informacions utils actives <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection informacioUtilActius(  )
      throws java.rmi.RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.InformacioUtil informacioUtilAmbId( java.lang.Long id )
      throws java.rmi.RemoteException;

   /**
    * Cerca totes les informacions utils actives <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Arxiu arxiuAmbId( java.lang.Long id )
      throws java.rmi.RemoteException;

   /**
    * Cerca totes les gestioInfografies <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection gestioInfografiaCercaTots(  )
      throws java.rmi.RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.GestioInfografia gestioInfografiaDaoAmbId( java.lang.Long id )
      throws java.rmi.RemoteException;

   /**
    * Devuelve todas las campanyas <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection campanyaCercaTotes(  )
      throws java.rmi.RemoteException;

   /**
    * Cerca una campanya amb id <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Campanya campanyaAmbId( java.lang.Integer id )
      throws java.rmi.RemoteException;

   /**
    * Cerca la campanya actual <!-- begin-xdoclet-definition -->
    */
   public java.lang.Long campanyaCercaActual(  )
      throws java.rmi.RemoteException;

   /**
    * Devuelve el total de kg de entrada de oliva por fechas <!-- begin-xdoclet-definition -->
    */
   public java.lang.Double getTotalOlivasEntradas( java.lang.Long temporadaId,java.util.Date dataInici,java.util.Date dataFin,java.lang.Long temporadaActual )
      throws java.rmi.RemoteException;

   /**
    * Devuelve el total de aceite elaborado por fechas <!-- begin-xdoclet-definition -->
    */
   public java.lang.Double getTotalOliElaborat( java.lang.Long temporadaId,java.util.Date dataInici,java.util.Date dataFin,java.lang.Long temporadaActual )
      throws java.rmi.RemoteException;

   /**
    * Busca todas las ventas de lotes y aceite a granel de una determinada categoria por fechas o temporada <!-- begin-xdoclet-definition -->
    */
   public java.lang.Double getTotalOliComercialitzatByCategoriasConsulta( java.lang.Long temporadaId,java.util.Date dataInici,java.util.Date dataFin,java.lang.Object[] categorias,java.lang.Long temporadaActual )
      throws java.rmi.RemoteException;

   /**
    * Cerca tots els establiments activos de unos tipos determinados <!-- begin-xdoclet-definition --> <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection establimentCercaTotsActivosByTipos( java.lang.Long campanyaId,java.lang.Object[] tipos )
      throws java.rmi.RemoteException;

   /**
    * Cerca tots els informes de les campanyes per tipus <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection informeCampanyaCercaPerTipus( java.lang.Boolean tipus )
      throws java.rmi.RemoteException;

   /**
    * Guarda el uid de tarjeta para un olivicultor y una campanya <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection marquesCercaPerEstabliment( java.lang.Long idEstabliment )
      throws java.rmi.RemoteException;

   /**
    * Cerca tots els etiquetatges d'una marca <!-- begin-xdoclet-definition -->
    */
   public java.util.List etiquetatgeByMarca( java.lang.Long idMarca )
      throws java.rmi.RemoteException;

   /**
    * Cerca totes les partides d'un etiquetatge <!-- begin-xdoclet-definition -->
    */
   public java.util.List partidaByEtiquetatge( java.lang.Long idEtiquetatge )
      throws java.rmi.RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public java.util.List lotByPartidaEtiquetatge( java.lang.Long partidaId,java.lang.Long etiquetatgeId )
      throws java.rmi.RemoteException;

   /**
    * <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Plantacio plantacioAmbId( java.lang.Long id )
      throws java.rmi.RemoteException;

   /**
    * Devuelve la cantidad total de litros de aceite existente para un establecimiento y categoria <!-- begin-xdoclet-definition -->
    */
   public java.lang.Double getQuantitatOliExistenciDO( java.util.Date data )
      throws java.rmi.RemoteException;

   /**
    * Devuelve la cantidad total de litros de aceite existente para un establecimiento y categoria <!-- begin-xdoclet-definition -->
    */
   public java.lang.Double getQuantitatOliExistenciDOSistema( java.util.Date data )
      throws java.rmi.RemoteException;

   /**
    * Devuelve la cantidad total de litros de aceite existente para un establecimiento y categoria <!-- begin-xdoclet-definition -->
    */
   public java.lang.Double getQuantitatOliAnalisiDOEntreDates( java.util.Date dataInici,java.util.Date dataFi )
      throws java.rmi.RemoteException;

   /**
    * Busca todas las salidas de depósitos que se han realizado de este establecimiento <!-- begin-xdoclet-definition -->
    */
   public java.lang.Double getSortidesDOEntreDias( java.util.Date dataInici,java.util.Date dataFi )
      throws java.rmi.RemoteException;

   /**
    * set the hibernate template.
    * @param hibernateTemplate the hibernate spring template. <!-- begin-xdoclet-definition -->
    */
   public void setHibernateTemplate( org.springframework.orm.hibernate3.HibernateTemplate hibernateTemplate )
      throws java.rmi.RemoteException;

   /**
    * get the hibernate template.
    * @return the hibernate spring template. <!-- begin-xdoclet-definition -->
    */
   public org.springframework.orm.hibernate3.HibernateTemplate getHibernateTemplate(  )
      throws java.rmi.RemoteException;

}
