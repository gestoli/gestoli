/*
 * Generated by XDoclet - Do not edit!
 */
package es.caib.gestoli.logic.interfaces;

/**
 * Remote interface for OliInformacioEjb.
 * @generated 
 */
public interface OliInformacioEjb
   extends javax.ejb.EJBObject
{
   /**
    * Nom√©s serveix per poder especificar els permisos amb xdoclet. <!-- begin-xdoclet-definition -->
    * @generated     */
   public void ejbRemove(  )
      throws java.rmi.RemoteException;

   /**
    * Devuelve una lista de informaciones
    * @return collection <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection llistatInformacio(  )
      throws java.rmi.RemoteException;

   /**
    * Devuelve una lista de informaciones filtrada
    * @return collection <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection llistatInformacioFiltre( java.lang.Integer categoria )
      throws java.rmi.RemoteException;

   /**
    * Devuelve una lista de informaciones
    * @return collection <!-- begin-xdoclet-definition -->
    */
   public java.util.List documentsByInformacio( java.lang.Integer idInformacio )
      throws java.rmi.RemoteException;

   /**
    * Recupera todas las categorias <!-- begin-xdoclet-definition -->
    */
   public java.util.Collection categoriaInformacioFindAll(  )
      throws java.rmi.RemoteException;

   /**
    * Recupera la categoria con ese id <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.CategoriaInformacio categoriaInformacioAmbId( java.lang.Integer id )
      throws java.rmi.RemoteException;

   /**
    * Devuelve verdadero si existe alguna informacion relacionada con la categoria <!-- begin-xdoclet-definition -->
    */
   public boolean existenInformacionesAsociadasCategoria( java.lang.Integer id )
      throws java.rmi.RemoteException;

   /**
    * Devuelve verdadero si existe una categoria con ese nombre <!-- begin-xdoclet-definition -->
    */
   public boolean existeOtraCategoriaConNombre( java.lang.String nom,java.lang.Integer id )
      throws java.rmi.RemoteException;

   /**
    * Borra una categoria <!-- begin-xdoclet-definition -->
    */
   public void categoriaInformacioEsborrar( java.lang.Integer id )
      throws java.rmi.RemoteException;

   /**
    * Crea una categoria <!-- begin-xdoclet-definition -->
    */
   public java.lang.Integer informacioCategoriaCrear( java.lang.String nom,java.lang.String desc )
      throws java.rmi.RemoteException;

   /**
    * Modifica una categoria <!-- begin-xdoclet-definition -->
    */
   public void informacioCategoriaModificar( java.lang.Integer id,java.lang.String nom,java.lang.String desc )
      throws java.rmi.RemoteException;

   /**
    * Modifica una categoria <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Informacio informacioAmbId( java.lang.Integer id )
      throws java.rmi.RemoteException;

   /**
    * Modifica una categoria <!-- begin-xdoclet-definition -->
    */
   public es.caib.gestoli.logic.model.Document documentAmbId( java.lang.Integer id )
      throws java.rmi.RemoteException;

   /**
    * Crea una informacio <!-- begin-xdoclet-definition -->
    */
   public java.lang.Integer informacioCrear( es.caib.gestoli.logic.model.Informacio informacio )
      throws java.rmi.RemoteException;

   /**
    * Modifica una informacio <!-- begin-xdoclet-definition -->
    */
   public void informacioModificar( es.caib.gestoli.logic.model.Informacio informacio,java.lang.Boolean informar )
      throws java.rmi.RemoteException;

   /**
    * Modifica una informacio <!-- begin-xdoclet-definition -->
    */
   public void informacioEsborrar( es.caib.gestoli.logic.model.Informacio informacio )
      throws java.rmi.RemoteException;

   /**
    * Crea una informacio <!-- begin-xdoclet-definition -->
    */
   public void documentCrear( es.caib.gestoli.logic.model.Document document,es.caib.gestoli.logic.model.Arxiu arxiu )
      throws java.rmi.RemoteException;

   /**
    * Crea una informacio <!-- begin-xdoclet-definition -->
    */
   public void documentModificar( es.caib.gestoli.logic.model.Document document,es.caib.gestoli.logic.model.Arxiu arxiu )
      throws java.rmi.RemoteException;

   /**
    * Crea una informacio <!-- begin-xdoclet-definition -->
    */
   public void documentEsborrar( java.lang.Integer id )
      throws java.rmi.RemoteException;

   /**
    * Marca que un olivicultor ha leido la informacion <!-- begin-xdoclet-definition -->
    */
   public void olivicultorLeeInfo( java.lang.Long idOli,es.caib.gestoli.logic.model.Informacio info )
      throws java.rmi.RemoteException;

   /**
    * Marca que un establecimiento ha leido la informacion <!-- begin-xdoclet-definition -->
    */
   public void establecimientoLeeInfo( java.lang.Long idEst,es.caib.gestoli.logic.model.Informacio info )
      throws java.rmi.RemoteException;

   /**
    * Indica si un establecimiento ha leido una informacion <!-- begin-xdoclet-definition -->
    */
   public boolean establecimientoHaLeido( java.lang.Long idEst,java.lang.Integer idInfo )
      throws java.rmi.RemoteException;

   /**
    * Indica si un olivicultor ha leido una informacion <!-- begin-xdoclet-definition -->
    */
   public boolean olivicultorHaLeido( java.lang.Long idOli,java.lang.Integer idInfo )
      throws java.rmi.RemoteException;

   /**
    * Indica si un establecimiento ha leido todos los documentos <!-- begin-xdoclet-definition -->
    */
   public boolean establecimientoHaLeidoTodo( java.lang.Long id )
      throws java.rmi.RemoteException;

   /**
    * Indica si un olivicultor ha leido todos los documentos <!-- begin-xdoclet-definition -->
    */
   public boolean olivicultorHaLeidoTodo( java.lang.Long id )
      throws java.rmi.RemoteException;

   /**
    * Indica si existen informaciones <!-- begin-xdoclet-definition -->
    */
   public boolean existenInformaciones(  )
      throws java.rmi.RemoteException;

   /**
    * set the hibernate template.
    * @param hibernateTemplate the hibernate spring template. <!-- begin-xdoclet-definition -->
    */
   public void setHibernateTemplate( org.springframework.orm.hibernate3.HibernateTemplate hibernateTemplate )
      throws java.rmi.RemoteException;

   /**
    * get the hibernate template.
    * @return the hibernate spring template. <!-- begin-xdoclet-definition -->
    */
   public org.springframework.orm.hibernate3.HibernateTemplate getHibernateTemplate(  )
      throws java.rmi.RemoteException;

}
