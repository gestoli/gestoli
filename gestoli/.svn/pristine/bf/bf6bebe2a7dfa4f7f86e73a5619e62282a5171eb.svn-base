package es.caib.gestoli.front.spring;

import java.rmi.RemoteException;

import org.apache.log4j.Logger;
import org.springframework.orm.hibernate3.HibernateTemplate;
import org.springframework.validation.Errors;
import org.springframework.validation.ValidationUtils;
import org.springframework.validation.Validator;

import es.caib.gestoli.logic.interfaces.OliInfraestructuraEjb;
import es.caib.gestoli.logic.model.Establiment;
import es.caib.gestoli.logic.model.EtiquetesLot;

public class EtiquetesLotValidator implements Validator {

	private static Logger logger = Logger.getLogger(EtiquetesLotValidator.class);
	
	private OliInfraestructuraEjb oliInfraestructuraEjb;
	private HibernateTemplate hibernateTemplate;
	
	public boolean supports(Class clazz) {
		return clazz.equals(EtiquetesLotCommand.class);
	}

	public void validate(Object obj, Errors errors) {
		
		EtiquetesLotCommand command = (EtiquetesLotCommand)obj;
		
		ValidationUtils.rejectIfEmpty(
				errors,
				"etiquetaLletra",
				"error.etiqueta.lletra.buit",
				"El camp lletra de la etiqueta no pot estar buit");
		
		ValidationUtils.rejectIfEmpty(
				errors,
				"etiquetaInici",
				"error.etiqueta.inici.buit",
				"El camp etiqueta inici no pot estar buit");
		
		ValidationUtils.rejectIfEmpty(
				errors,
				"etiquetaFi",
				"error.etiqueta.fi.buit",
				"El camp etiqueta fi no pot estar buit");
		
		
		ValidationUtils.rejectIfEmpty(
				errors,
				"quantitat",
				"error.etiqueta.quantitat.buit",
				"El camp quantitat no pot estar buit");
		
		try {
			Establiment establiment = oliInfraestructuraEjb.establimentAmbId(command.getIdEstabliment());
			
			EtiquetesLot etiquetesLot = new EtiquetesLot(
												command.getEtiquetaLletra(),
												command.getEtiquetaInici(),
												command.getEtiquetaFi(),
												command.getCapacitat(),
												false,
												false,
												command.getOlivaTaula(),
												establiment
												);
			if(oliInfraestructuraEjb.teEtiquetesLotSolapades(etiquetesLot)){
				errors.rejectValue(
						"etiquetaInici", 
						"error.etiqueta.solapada", 
						"L'etiqueta es solapa amb alguna altra");
				
				errors.rejectValue(
						"etiquetaFi", 
						"error.etiqueta.solapada", 
						"L'etiqueta es solapa amb alguna altra");
			}
		} catch (RemoteException e) {
			e.printStackTrace();
		}
	}

	public void setOliInfraestructuraEjb(OliInfraestructuraEjb oliInfraestructuraEjb) {
		this.oliInfraestructuraEjb = oliInfraestructuraEjb;
	}
	
	/**
	 * set the hibernate template.
	 * @param hibernateTemplate the hibernate spring template.
	 * @spring.property ref="hibernateTemplate"
	 */
	public void setHibernateTemplate(HibernateTemplate hibernateTemplate){
		this.hibernateTemplate = hibernateTemplate;
	}

	/**
	 * get the hibernate template.
	 * @return the hibernate spring template.
	 */
	public HibernateTemplate getHibernateTemplate(){
		return this.hibernateTemplate;
	}
}
